#include "s21_string.h"
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <limits.h>


// s21_strlen

#test s21_strlen_1
    char str[1]="";
    ck_assert_int_eq(s21_strlen(str), strlen(str));

#test s21_strlen_2
    char str[2]="1";
    ck_assert_int_eq(s21_strlen(str), strlen(str));

#test s21_strlen_3
    char str[4]="123";
    ck_assert_int_eq(s21_strlen(str), strlen(str));

#test s21_strlen_4
    char str[2]="\0";
    ck_assert_int_eq(s21_strlen(str), strlen(str));

// s21_memcmp_tests

#test s21_memcmp_1
    char str1[1]="";
    char str2[1]="";
    s21_size_t n = 0;
    ck_assert_int_eq(s21_memcmp(str1, str2, n), memcmp(str1, str2, n));

#test s21_memcmp_2
    char str1[1]="";
    char str2[1]="";
    s21_size_t n = 1;
    ck_assert_int_eq(s21_memcmp(str1, str2, n), memcmp(str1, str2, n));

#test s21_memcmp_3
    char str1[2]="1";
    char str2[1]="";
    s21_size_t n = 0;
    ck_assert_int_eq(s21_memcmp(str1, str2, n), memcmp(str1, str2, n));

#test s21_memcmp_4
    char str1[2]="1";
    char str2[1]="";
    s21_size_t n = 1;
    ck_assert_int_eq(s21_memcmp(str1, str2, n), memcmp(str1, str2, n));

#test s21_memcmp_5
    char str1[2]="1";
    char str2[2]="1";
    s21_size_t n = 0;
    ck_assert_int_eq(s21_memcmp(str1, str2, n), memcmp(str1, str2, n));

#test s21_memcmp_6
    char str1[2]="1";
    char str2[2]="1";
    s21_size_t n = 1;
    ck_assert_int_eq(s21_memcmp(str1, str2, n), memcmp(str1, str2, n));

#test s21_memcmp_7
    char str1[2]="1";
    char str2[2]="1";
    s21_size_t n = 2;
    ck_assert_int_eq(s21_memcmp(str1, str2, n), memcmp(str1, str2, n));

#test s21_memcmp_8
    char str1[6]="12345";
    char str2[2]="1";
    s21_size_t n = 1;
    ck_assert_int_eq(s21_memcmp(str1, str2, n), memcmp(str1, str2, n));

#test s21_memcmp_9
    char str1[6]="12345";
    char str2[4]="234";
    s21_size_t n = 4;
    ck_assert_int_eq(s21_memcmp(str1, str2, n), memcmp(str1, str2, n));

#test s21_memcmp_10
    char str1[6]="12345";
    char str2[6]="12345";
    s21_size_t n = 5;
    ck_assert_int_eq(s21_memcmp(str1, str2, n), memcmp(str1, str2, n));

// s21_strrchr_tests

#test s21_strrchr_test_1
    char str[1]="";
    char cr = '\0';
    ck_assert_ptr_eq(strrchr(str, cr), s21_strrchr(str, cr));

#test s21_strrchr_test_2
    char str[1]="";
    char cr = 0;
    ck_assert_ptr_eq(strrchr(str, cr), s21_strrchr(str, cr));

#test s21_strrchr_test_3
    char str[1]="";
    char cr = 't';
    ck_assert_ptr_eq(strrchr(str, cr), s21_strrchr(str, cr));

#test s21_strrchr_test_4
    char str[2]="t";
    char cr = 't';
    ck_assert_ptr_eq(strrchr(str, cr), s21_strrchr(str, cr));

#test s21_strrchr_test_5
    char str[2]="t";
    char cr = '\0';
    ck_assert_ptr_eq(strrchr(str, cr), s21_strrchr(str, cr));

#test s21_strrchr_test_6
    char str[4]="1t3";
    char cr = 't';
    ck_assert_ptr_eq(strrchr(str, cr), s21_strrchr(str, cr));

#test s21_strrchr_test_7
    char str[4]="123";
    char cr = 'n';
    ck_assert_ptr_eq(strrchr(str, cr), s21_strrchr(str, cr));

#test s21_strrchr_test_8
    char str[4]="123";
    char cr = '\0';
    ck_assert_ptr_eq(strrchr(str, cr), s21_strrchr(str, cr));

#test s21_strrchr_test_9
    char str[5]="123t";
    char cr = 't';
    ck_assert_ptr_eq(strrchr(str, cr), s21_strrchr(str, cr));

#test s21_strrchr_test_10
    char str[5]="1t3t";
    char cr = 't';
    ck_assert_ptr_eq(strrchr(str, cr), s21_strrchr(str, cr));

#test s21_strrchr_test_11
    char str[6]="1t3t5";
    char cr = 't';
    ck_assert_ptr_eq(strrchr(str, cr), s21_strrchr(str, cr));

#test s21_strrchr_test_12
    char str[7]="1t3t5t";
    char cr = 't';
    ck_assert_ptr_eq(strrchr(str, cr), s21_strrchr(str, cr));

#test s21_strrchr_test_13
    char str[7]="1t3t5t";
    char cr = '\0';
    ck_assert_ptr_eq(strrchr(str, cr), s21_strrchr(str, cr));

#test s21_strrchr_test_14
    char str[7]="1t3t5t";
    char cr = 'n';
    ck_assert_ptr_eq(strrchr(str, cr), s21_strrchr(str, cr));

#test s21_strrchr_test_15
    char str[7]="1t3t5t";
    char cr = -1;
    ck_assert_ptr_eq(strrchr(str, cr), s21_strrchr(str, cr));

// s21_strspn_tests

#test s21_strspn_test_1
    char str1[1]="";
    char str2[1]="";
    ck_assert_uint_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test s21_strspn_test_2
    char str1[2]="\0";
    char str2[1]="";
    ck_assert_uint_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test s21_strspn_test_3
    char str1[1]="";
    char str2[2]="\0";
    ck_assert_uint_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test s21_strspn_test_4
    char str1[4]="123";
    char str2[2]="";
    ck_assert_uint_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test s21_strspn_test_5
    char str1[1]="";
    char str2[4]="123";
    ck_assert_uint_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test s21_strspn_test_6
    char str1[4]="123";
    char str2[4]="123";
    ck_assert_uint_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test s21_strspn_test_7
    char str1[4]="123";
    char str2[4]="321";
    ck_assert_uint_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test s21_strspn_test_8
    char str1[6]="12345";
    char str2[4]="234";
    ck_assert_uint_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test s21_strspn_test_9
    char str1[6]="12345";
    char str2[4]="234";
    ck_assert_uint_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test s21_strspn_test_10
    char str1[6]="12345";
    char str2[4]="234";
    ck_assert_uint_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test s21_strspn_test_11
    char str1[10]="123452345";
    char str2[4]="234";
    ck_assert_uint_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test s21_strspn_test_12
    char str1[14]="2233443322123";
    char str2[4]="234";
    ck_assert_uint_eq(strspn(str1, str2), s21_strspn(str1, str2));

#test s21_strspn_test_13
    char str1[2]="1";
    char str2[3]="21";
    ck_assert_uint_eq(strspn(str1, str2), s21_strspn(str1, str2));

// s21_strstr_tests

#test s21_strstr_test_1
    char str1[1]="";
    char str2[1]="";
    ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test s21_strstr_test_2
    char str1[4]="123";
    char str2[1]="";
    ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test s21_strstr_test_3
    char str1[1]="";
    char str2[2]=" ";
    ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test s21_strstr_test_4
    char str1[2]=" ";
    char str2[1]="";
    ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test s21_strstr_test_5
    char str1[4]="123";
    char str2[1]="1";
    ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test s21_strstr_test_6
    char str1[4]="123";
    char str2[4]="123";
    ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test s21_strstr_test_7
    char str1[4]="123";
    char str2[3]="12";
    ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test s21_strstr_test_8
    char str1[4]="123";
    char str2[2]="3";
    ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test s21_strstr_test_9
    char str1[4]="123";
    char str2[2]="\0";
    ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test s21_strstr_test_10
    char str1[10]="123abc789";
    char str2[4]="abc";
    ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2)); 

#test s21_strstr_test_11
    char str1[10]="123cba789";
    char str2[4]="abc";
    ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test s21_strstr_test_12
    char str1[10]="123cba789";
    char str2[10]="123cba789";
    ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test s21_strstr_test_13
    char str1[10]="123cba789";
    char str2[4]="zxc";
    ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

#test s21_strstr_test_14
    char str1[16]="123cba789cba345";
    char str2[4]="cba";
    ck_assert_ptr_eq(strstr(str1, str2), s21_strstr(str1, str2));

// s21_strtok_tests

#test s21_strtok_test_1
    char str1_1[1]="";
    char str1_2[1]="";
    char str2_1[1]="";
    char str2_2[1]="";
    ck_assert_ptr_eq(strtok(str1_1, str1_2), s21_strtok(str2_1, str2_2));

#test s21_strtok_test_2
    char str1_1[1]="";
    char str1_2[2]="1";
    char str2_1[1]="";
    char str2_2[2]="1";
    ck_assert_ptr_eq(strtok(str1_1, str1_2), s21_strtok(str2_1, str2_2));

#test s21_strtok_test_3
    char str1_1[8]="123d567";
    char str1_2[2]="d";
    char str2_1[8]="123d567";
    char str2_2[2]="d";
    // init
    char *s = strtok(str1_1, str1_2);
    char *s21 = s21_strtok(str2_1, str2_2);
    ck_assert_str_eq(s, s21);
    // 0
    s = strtok(NULL, str1_2);
    s21 = s21_strtok(S21_NULL, str2_2);
    ck_assert_str_eq(s, s21);
    // 1 S21_NULL
    s = strtok(NULL, str1_2);
    s21 = s21_strtok(S21_NULL, str2_2);
    ck_assert_ptr_eq(s, s21);
    // 2 S21_NULL
    s = strtok(NULL, str1_2);
    s21 = s21_strtok(S21_NULL, str2_2);
    ck_assert_ptr_eq(s, s21);

#test s21_strtok_test_4
    char str1_1[10]="12d45dd89";
    char str1_2[2]="d";
    char str2_1[10]="12d45dd89";
    char str2_2[2]="d";
    // init
    char *s = strtok(str1_1, str1_2);
    char *s21 = s21_strtok(str2_1, str2_2);
    ck_assert_str_eq(s, s21);
    // 0
    s = strtok(NULL, str1_2);
    s21 = s21_strtok(S21_NULL, str2_2);
    ck_assert_str_eq(s, s21);
    // 1
    s = strtok(NULL, str1_2);
    s21 = s21_strtok(S21_NULL, str2_2);
    ck_assert_str_eq(s, s21);
    // 2 S21_NULL
    s = strtok(NULL, str1_2);
    s21 = s21_strtok(S21_NULL, str2_2);
    ck_assert_ptr_eq(s, s21);
    // 3 S21_NULL
    s = strtok(NULL, str1_2);
    s21 = s21_strtok(S21_NULL, str2_2);
    ck_assert_ptr_eq(s, s21);

#test s21_strtok_test_5
    char str1_1[14]="12abc67bcac23";
    char str1_2[4]="abc";
    char str2_1[14]="12abc67bcac23";
    char str2_2[4]="abc";
    // init
    char *s = strtok(str1_1, str1_2);
    char *s21 = s21_strtok(str2_1, str2_2);
    ck_assert_str_eq(s, s21);
    // 0
    s = strtok(NULL, str1_2);
    s21 = s21_strtok(S21_NULL, str2_2);
    ck_assert_str_eq(s, s21);
    // 1
    s = strtok(NULL, str1_2);
    s21 = s21_strtok(S21_NULL, str2_2);
    ck_assert_str_eq(s, s21);
    // 2 S21_NULL
    s = strtok(NULL, str1_2);
    s21 = s21_strtok(S21_NULL, str2_2);
    ck_assert_ptr_eq(s, s21);
    // 3 S21_NULL
    s = strtok(NULL, str1_2);
    s21 = s21_strtok(S21_NULL, str2_2);
    ck_assert_ptr_eq(s, s21);

#test s21_strtok_test_6
    char str1_1[6]="12abc";
    char str1_2[4]="abc";
    char str2_1[6]="12abc";
    char str2_2[4]="abc";
    // init
    char *s = strtok(str1_1, str1_2);
    char *s21 = s21_strtok(str2_1, str2_2);
    ck_assert_str_eq(s, s21);
    // 0 S21_NULL
    s = strtok(NULL, str1_2);
    s21 = s21_strtok(S21_NULL, str2_2);
    ck_assert_ptr_eq(s, s21);
    // 1 S21_NULL
    s = strtok(NULL, str1_2);
    s21 = s21_strtok(S21_NULL, str2_2);
    ck_assert_ptr_eq(s, s21);

#test s21_strtok_test_7
    char str1_1[16]="12abc67bcac23cb";
    char str1_2[4]="abc";
    char str2_1[16]="12abc67bcac23cb";
    char str2_2[4]="abc";
    // init
    char *s = strtok(str1_1, str1_2);
    char *s21 = s21_strtok(str2_1, str2_2);
    ck_assert_str_eq(s, s21);
    // 0
    s = strtok(NULL, str1_2);
    s21 = s21_strtok(S21_NULL, str2_2);
    ck_assert_str_eq(s, s21);
    // 1
    s = strtok(NULL, str1_2);
    s21 = s21_strtok(S21_NULL, str2_2);
    ck_assert_str_eq(s, s21);
    // 2 S21_NULL
    s = strtok(NULL, str1_2);
    s21 = s21_strtok(S21_NULL, str2_2);
    ck_assert_ptr_eq(s, s21);
    // 3 S21_NULL
    s = strtok(NULL, str1_2);
    s21 = s21_strtok(S21_NULL, str2_2);
    ck_assert_ptr_eq(s, s21);

#test s21_strcmpTest_1
ck_assert_int_eq(s21_strcmp("foo", "asd"),strcmp("foo", "asd"));

#test s21_strcmpTest_2
ck_assert_int_eq(s21_strcmp("iron123", "qwe"),strcmp("iron123", "qwe"));

#test s21_strcmpTest_3
ck_assert_int_eq(s21_strcmp("iron123", "123"),strcmp("iron123", "123"));

#test s21_strcmpTest_4
ck_assert_int_eq(s21_strcmp("iron123", " "),strcmp("iron123", " "));

#test s21_strcmpTest_5
ck_assert_int_eq(s21_strcmp("iron123", "iron123"),strcmp("iron123", "iron123"));

#test s21_strcmpTest_6
ck_assert_int_eq(s21_strcmp(" ", "iron123"),strcmp(" ", "iron123"));

#test s21_strncmpTest_1
ck_assert_int_eq(s21_strncmp("1234567890", "1234467890", 5),strncmp("1234567890", "1234467890", 5));

#test s21_strncmpTest_2
ck_assert_int_eq(s21_strncmp("1234567890", "1234467890", 5),strncmp("1234567890", "1234467890", 5));

#test s21_strncmpTest_3
ck_assert_int_eq(s21_strncmp("qwertyasd", "qwertyasd", 5),strncmp("qwertyasd", "qwertyasd", 5));


#test s21_strncmpTest_4
ck_assert_int_eq(s21_strncmp("qwertyasd", " ", 0),strncmp("qwertyasd", " ", 0));

#test s21_strcpyTest_1
char str1[20] = "C programming";
char str2[20];
ck_assert_str_eq(s21_strcpy(str2, str1),strcpy(str2, str1));

#test s21_strcpyTest_2
char str1[20] = "";
char str2[20];
ck_assert_str_eq(s21_strcpy(str2, str1),strcpy(str2, str1));

#test s21_strcpyTest_3
char str1[20] = "0";
char str2[20];
ck_assert_str_eq(s21_strcpy(str2, str1),strcpy(str2, str1));

#test s21_strcpyTest_4
char str1[20] = "\0";
char str2[20];
ck_assert_str_eq(s21_strcpy(str2, str1),strcpy(str2, str1));

#test s21_strcpyTest_5
char str1[20] = "34523523464325";
char str2[20];
ck_assert_str_eq(s21_strcpy(str2, str1),strcpy(str2, str1));

#test s21_strncpyTest_1
char str1[20] = "1234567890";
char str2[20] = "1234507890";
ck_assert_str_eq(s21_strncpy(str2, str1, 5),strncpy(str2, str1, 5));

#test s21_strncpyTest_2
char str1[2] = "\0";
char str2[2] = "\0";
ck_assert_str_eq(s21_strncpy(str2, str1, 1),strncpy(str2, str1, 1));

#test s21_strncpyTest_3
char str1[2] = "\0";
char str2[20] = "454235236246";
ck_assert_str_eq(s21_strncpy(str2, str1, 1),strncpy(str2, str1, 1));

#test s21_strncpyTest_4
char str1[20] = "454235236246";
char str2[2] = "\0";
ck_assert_str_eq(s21_strncpy(str2, str1, 1),strncpy(str2, str1, 1));

#test s21_strncpyTest_5
char str1[10] = "ragnar";
char str2[10] = "regnar";
ck_assert_str_eq(s21_strncpy(str2, str1, 3),strncpy(str2, str1, 3));

// memsetTests

#test memsetTest1
char b[15]="1234567890";
char c[15]="1234567890";
ck_assert_str_eq(memset(b, 'f', 4), s21_memset(c, 'f', 4));

#test memsetTest2
char b[15]="1234567890";
char c[15]="1234567890";
ck_assert_str_eq(memset(b, '1', 4), s21_memset(c, '1', 4));

// #test memsetTest3
char a[15]="1234567890";
ck_assert_ptr_eq(memset(a, 'g', 4), s21_memset(a, 'g', 4));

#test memsetTest4
char b[15]="1234567890";
char c[15]="1234567890";
ck_assert_str_eq(memset(b, 'p', 0), s21_memset(c, 'p', 0));

#test memsetTest5
char b[15]="hell01234";
char c[15]="hell01234";
ck_assert_str_eq(memset(b, 'p', 7), s21_memset(c, 'p', 7));

#test memsetTest6
char b[15]="  ";
char c[15]="  ";
ck_assert_str_eq(memset(b, 'p', 7), s21_memset(c, 'p', 7));

// strcatTests

#test strcatTest1
char arr[20] = "hello ";
char arr2[20] = "hello ";
ck_assert_str_eq(strcat(arr, "word"), s21_strcat(arr2, "word"));

#test strcatTest2
char arr[20] = "";
char arr2[20] = "";
ck_assert_str_eq(strcat(arr, ""), s21_strcat(arr2, ""));

#test strcatTest3
char arr[20] = "123";
char arr2[20] = "123";
ck_assert_str_eq(strcat(arr, " "), s21_strcat(arr2, " "));

#test strcatTest4
char arr[20] = "123";
ck_assert_ptr_eq(strcat(arr, " "), s21_strcat(arr, " "));

// strncatTests

#test strncatTest1
char src1[10]="000";
char src2[10]="000";
char app[10]="12345";
char app2[10]="12345";
ck_assert_str_eq(strncat(src1, app, 0), s21_strncat(src2, app2, 0));

#test strncatTest2
char src1[10]="000";
char src2[10]="000";
char app[10]="12345";
char app2[10]="12345";
ck_assert_str_eq(strncat(src1, app, 3), s21_strncat(src2, app2, 3));

#test strncatTest3
char src1[10]="000";
char app[10]="12345";
ck_assert_ptr_eq(strncat(src1, app, 3), s21_strncat(src1, app, 3));


#test strncatTest7
char src1[10]="000";
char app[10]="   ";
ck_assert_ptr_eq(strncat(src1, app, 3), s21_strncat(src1, app, 3));

// strchrTests

#test strchrTest0
char str[11] = "0123456789";
int ch = 'n';
ck_assert_pstr_eq(strchr(str, ch), s21_strchr(str, ch));

#test strchrTest1
char str[11] = "0123456789";
int ch = '6';
ck_assert_ptr_eq(strchr(str, ch), s21_strchr(str, ch));

#test strchrTest2
char str[1]="";
char ch = '\0';
ck_assert_ptr_eq(strchr(str, ch), s21_strchr(str, ch));

#test strchrTest3
char str[1]="";
char ch = 0;
ck_assert_ptr_eq(strchr(str, ch), s21_strchr(str, ch));

#test strchrTest4
    char str[1]="";
    char ch = 't';
    ck_assert_ptr_eq(strchr(str, ch), s21_strchr(str, ch));

#test strchrTest5
    char str[2]="t";
    char ch = 't';
    ck_assert_ptr_eq(strchr(str, ch), s21_strchr(str, ch));

#test strchrTest6
    char str[2]="t";
    char ch = '\0';
    ck_assert_ptr_eq(strchr(str, ch), s21_strchr(str, ch));

#test strchrTest7
    char str[4]="1t3";
    char ch = 't';
    ck_assert_ptr_eq(strchr(str, ch), s21_strchr(str, ch));

#test strchrTest8
    char str[4]="123";
    char ch = 'n';
    ck_assert_ptr_eq(strchr(str, ch), s21_strchr(str, ch));

#test strchrTest9
    char str[4]="123";
    char ch = '\0';
    ck_assert_ptr_eq(strchr(str, ch), s21_strchr(str, ch));

#test strchrTest10
    char str[5]="123t";
    char ch = 't';
    ck_assert_ptr_eq(strchr(str, ch), s21_strchr(str, ch));

#test strchrTest11
    char str[5]="1t3t";
    char ch = 't';
    ck_assert_ptr_eq(strchr(str, ch), s21_strchr(str, ch));

#test strchrTest12
    char str[6]="1t3t5";
    char ch = 't';
    ck_assert_ptr_eq(strchr(str, ch), s21_strchr(str, ch));

#test strchrTest13
    char str[7]="1t3t5t";
    char ch = 't';
    ck_assert_ptr_eq(strchr(str, ch), s21_strchr(str, ch));

#test strchrTest14
    char str[7]="1t3t5t";
    char ch = '\0';
    ck_assert_ptr_eq(strchr(str, ch), s21_strchr(str, ch));

#test strchrTest15
    char str[7]="1t3t5t";
    char ch = 'n';
    ck_assert_ptr_eq(strchr(str, ch), s21_strchr(str, ch));

#test strlen_1
char arr[] = "text";
ck_assert_uint_eq(strlen(arr), s21_strlen(arr));

#test strlen_2
char text[] = "";
ck_assert_uint_eq(strlen(text), s21_strlen(text));

#test strlen_3
char space[] = "    ";
ck_assert_uint_eq(strlen(space), s21_strlen(space));

#test strcspn_1
char arr1[] = "123456";
char arr2[] = "3";
ck_assert_uint_eq(strcspn(arr1, arr2), s21_strcspn(arr1, arr2));

#test strcspn_2
char arr1[] = "123456";
char arr2[] = "8";
ck_assert_uint_eq(strcspn(arr1, arr2), s21_strcspn(arr1, arr2));

#test strcspn_3
char arr1[] = "123456";
char arr2[] = "2";
ck_assert_uint_eq(strcspn(arr1, arr2), s21_strcspn(arr1, arr2));

#test strcspn_4
char arr1[] = "123456";
char arr2[] = "";
ck_assert_uint_eq(strcspn(arr1, arr2), s21_strcspn(arr1, arr2));

#test strcspn_5
char arr1[] = "";
char arr2[] = "2";
ck_assert_uint_eq(strcspn(arr1, arr2), s21_strcspn(arr1, arr2));

#test strcspn_6
char arr1[] = "";
char arr2[] = "";
ck_assert_uint_eq(strcspn(arr1, arr2), s21_strcspn(arr1, arr2));

#test strcspn_7
char* arr1 = "tExTeS";
char* arr2 = "t";
ck_assert_uint_eq(strcspn(arr1, arr2), s21_strcspn(arr1, arr2));

#test strcspn_8
char* arr1 = "tExTeS";
char* arr2 = "E";
ck_assert_uint_eq(strcspn(arr1, arr2), s21_strcspn(arr1, arr2));

#test strcspn_9
char* arr1 = "";
char* arr2 = "2";
ck_assert_uint_eq(strcspn(arr1, arr2), s21_strcspn(arr1, arr2));

#test strerror_1
int i = 0;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror_2
int i = 100;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror_3
int j = 230;
ck_assert_str_eq(strerror(j), s21_strerror(j));

#test strerror_4
int x = -2;
ck_assert_str_eq(strerror(x), s21_strerror(x));

#test strerror_5
int i = -5;
while (i++ < 200) ck_assert_str_eq(s21_strerror(i), strerror(i));

#test strpbrk_1
const char* arr1 = "text is a test";
const char* arr2 = "is";
ck_assert_str_eq(strpbrk(arr1, arr2), s21_strpbrk(arr1, arr2));

#test strpbrk_2
const char* array1 = "";
const char* array2 = "is";
ck_assert_pstr_eq(strpbrk(array1, array2), s21_strpbrk(array1, array2));

#test strpbrk_3
const char* array1 = "124";
const char* array2 = "test";
ck_assert_pstr_eq(strpbrk(array1, array2), s21_strpbrk(array1, array2));

#test strpbrk_4
const char* array1 = "Test is a text";
const char* array2 = "IS";
ck_assert_pstr_eq(strpbrk(array1, array2), s21_strpbrk(array1, array2));

#test strpbrk_5
const char* array1 = "";
const char* array2 = "IS";
ck_assert_ptr_eq(strpbrk(array1, array2), s21_strpbrk(array1, array2));

#test strpbrk_6
const char* array1 = "";
const char* array2 = "";
ck_assert_ptr_eq(strpbrk(array1, array2), s21_strpbrk(array1, array2));

#test memchr2

ck_assert_ptr_eq(s21_memchr("", 'a', 10), memchr("", 'a', 10));

#test memchr3

ck_assert_str_eq(s21_memchr("12a123", 'a', 4), memchr("12a123", 'a', 4));

#test memchr4

ck_assert_str_eq(s21_memchr("a", 'a', 10), memchr("a", 'a', 10));


#test memcpy1

char str1[8] = "abcdefg";
char str2[11] = "1234567890";

ck_assert_ptr_eq(s21_memcpy(str1, str2, 3), memcpy(str1, str2, 3));

#test memcpy2

char str2[11] = "1234567890";
char str5[11] = "1234567890";

ck_assert_str_eq(s21_memcpy(str2, str2 + 2, 5), memcpy(str5, str5 + 2, 5));

#test memcpy3

char str2[11] = "1234567890";
char str5[11] = "1234567890";

ck_assert_str_eq(s21_memcpy(str2, "563456", 3), memcpy(str5, "563456", 3));

#test memmove1

char str3[8] = "abcdefg";
char str4[11] = "1234567890";

ck_assert_ptr_eq(s21_memmove(str3, str4, 3), memmove(str3, str4, 3));

#test memmove2

char str3[8] = "abcdefg";
char str4[11] = "1234567890";

ck_assert_str_eq(s21_memmove(str3, str4, 8), memmove(str3, str4, 8));

#test memmove3

char str4[11] = "1234567890";
char str6[11] = "1234567890";

ck_assert_str_eq(s21_memmove(str4 + 3, str4, 5), memmove(str6 + 3, str6, 5));

#test memmove4

char str4[20] = "1234567890fgbdf";
char str6[11] = "1234567890";

ck_assert_str_eq(s21_memmove(str6, str4, 10), memmove(str6, str4, 10));

#test to_upper1
char str1[] = "abc";
char *str2 = s21_to_upper(str1);
ck_assert_str_eq(str2, "ABC");
free(str2);

#test to_upper2
char str1[] = "aBc";
char *str2 = s21_to_upper(str1);
ck_assert_str_eq(str2, "ABC");
free(str2);

#test to_upper3
char str1[] = "abC";
char *str2 = s21_to_upper(str1);
ck_assert_str_eq(str2, "ABC");
free(str2);

#test to_upper4
char str1[] = "ABC";
char *str2 = s21_to_upper(str1);
ck_assert_str_eq(str2, "ABC");
free(str2);

#test to_upper5
char str1[] = "123";
char *str2 = s21_to_upper(str1);
ck_assert_str_eq(str2, "123");
free(str2);

#test to_upper6
char str1[] = "123abc";
char *str2 = s21_to_upper(str1);
ck_assert_str_eq(str2, "123ABC");
free(str2);

#test to_upper7
char str1[] = "aBaBc";
char *str2 = s21_to_upper(str1);
ck_assert_str_eq(str2, "ABABC");
free(str2);

#test to_upper8
char str1[] = ".,/.,/.,";
char *str2 = s21_to_upper(str1);
ck_assert_str_eq(str2, ".,/.,/.,");
free(str2);

#test to_upper9
char str1[] = "09876abc";
char *str2 = s21_to_upper(str1);
ck_assert_str_eq(str2, "09876ABC");
free(str2);

#test to_upper10
char str1[] = "abc123";
char *str2 = s21_to_upper(str1);
ck_assert_str_eq(str2, "ABC123");
free(str2);

#test to_upper11
char str1[] = " ";
char *str2 = s21_to_upper(str1);
ck_assert_str_eq(str2, " ");
free(str2);

#test to_upper12
char str1[] = "";
char *str2 = s21_to_upper(str1);
ck_assert_str_eq(str2, "");
free(str2);

#test to_upper13
char str1[] = "a1a1a1";
char *str2 = s21_to_upper(str1);
ck_assert_str_eq(str2, "A1A1A1");
free(str2);

#test to_upper14
char str1[] = " a1a1a1";
char *str2 = s21_to_upper(str1);
ck_assert_str_eq(str2, " A1A1A1");
free(str2);

#test to_upper15
char str1[] = "a1a1a1 ";
char *str2 = s21_to_upper(str1);
ck_assert_str_eq(str2, "A1A1A1 ");
free(str2);

#test to_upper16
char str1[] = "Aa1a1a1";
char *str2 = s21_to_upper(str1);
ck_assert_str_eq(str2, "AA1A1A1");
free(str2);

#test to_upper17
char str1[] = "a1a1a1A";
char *str2 = s21_to_upper(str1);
ck_assert_str_eq(str2, "A1A1A1A");
free(str2);

#test to_upper18
char str1[] = "a1a1\0a1";
char *str2 = s21_to_upper(str1);
ck_assert_str_eq(str2, "A1A1\0A1");
free(str2);

#test to_upper19
char str1[] = "a1a\n1a1";
char *str2 = s21_to_upper(str1);
ck_assert_str_eq(str2, "A1A\n1A1");
free(str2);

#test to_upper20
char str1[] = "abcdefghijklmnopqrstuvwxyz";
char *str2 = s21_to_upper(str1);
ck_assert_str_eq(str2, "ABCDEFGHIJKLMNOPQRSTUVWXYZ");
free(str2);

#test to_upper21
char str1[] = ")(*&^YTRYUIKJHWR<LR3.,tmwnrg.";
char *str2 = s21_to_upper(str1);
ck_assert_str_eq(str2, ")(*&^YTRYUIKJHWR<LR3.,TMWNRG.");
free(str2);

#test to_upper22
char str1[] = " ";
char *str2 = s21_to_upper(str1);
ck_assert_str_eq(str2, " ");
free(str2);

#test to_upper23
char str1[] = "ABC";
char *str2 = s21_to_upper(str1);
ck_assert_str_eq(str2, "ABC");
free(str2);

#test to_upper24
char str1[] = "_az{";
char *str2 = s21_to_upper(str1);
ck_assert_str_eq(str2, "_AZ{");
free(str2);

#test to_upper25
char str1[] = "SDFGHJKLPOIUYTREWQWERTYUIOP[OIUYTRFGHJKLJHBVNMASDFGHJKLPOIUYTREWQWERTYUIO";
char *str2 = s21_to_upper(str1);
ck_assert_str_eq(str2, "SDFGHJKLPOIUYTREWQWERTYUIOP[OIUYTRFGHJKLJHBVNMASDFGHJKLPOIUYTREWQWERTYUIO");
free(str2);

#test to_lower1
char str1[] = "ABC";
char *str2 = s21_to_lower(str1);
ck_assert_str_eq(str2, "abc");
free(str2);

#test to_lower2
char str1[] = "aBc";
char *str2 = s21_to_lower(str1);
ck_assert_str_eq(str2, "abc");
free(str2);

#test to_lower3
char str1[] = "abC";
char *str2 = s21_to_lower(str1);
ck_assert_str_eq(str2, "abc");
free(str2);

#test to_lower4
char str1[] = "ABC";
char *str2 = s21_to_lower(str1);
ck_assert_str_eq(str2, "abc");
free(str2);

#test to_lower5
char str1[] = "123";
char *str2 = s21_to_lower(str1);
ck_assert_str_eq(str2, "123");
free(str2);

#test to_lower6
char str1[] = "123ABC";
char *str2 = s21_to_lower(str1);
ck_assert_str_eq(str2, "123abc");
free(str2);

#test to_lower7
char str1[] = "aBaBc";
char *str2 = s21_to_lower(str1);
ck_assert_str_eq(str2, "ababc");
free(str2);

#test to_lower8
char str1[] = ".,/.,/.,";
char *str2 = s21_to_lower(str1);
ck_assert_str_eq(str2, ".,/.,/.,");
free(str2);

#test to_lower9
char str1[] = "09876ABC";
char *str2 = s21_to_lower(str1);
ck_assert_str_eq(str2, "09876abc");
free(str2);

#test to_lower10
char str1[] = "ABC123";
char *str2 = s21_to_lower(str1);
ck_assert_str_eq(str2, "abc123");
free(str2);

#test to_lower11
char str1[] = " ";
char *str2 = s21_to_lower(str1);
ck_assert_str_eq(str2, " ");
free(str2);

#test to_lower12
char str1[] = "";
char *str2 = s21_to_lower(str1);
ck_assert_str_eq(str2, "");
free(str2);

#test to_lower13
char str1[] = "A1A1A1";
char *str2 = s21_to_lower(str1);
ck_assert_str_eq(str2, "a1a1a1");
free(str2);

#test to_lower14
char str1[] = " A1A1A1";
char *str2 = s21_to_lower(str1);
ck_assert_str_eq(str2, " a1a1a1");
free(str2);

#test to_lower15
char str1[] = "A1A1A1 ";
char *str2 = s21_to_lower(str1);
ck_assert_str_eq(str2, "a1a1a1 ");
free(str2);

#test to_lower16
char str1[] = "AA1A1A1";
char *str2 = s21_to_lower(str1);
ck_assert_str_eq(str2, "aa1a1a1");
free(str2);

#test to_lower17
char str1[] = "A1a1A1A";
char *str2 = s21_to_lower(str1);
ck_assert_str_eq(str2, "a1a1a1a");
free(str2);

#test to_lower18
char str1[] = "A1A1\0a1";
char *str2 = s21_to_lower(str1);
ck_assert_str_eq(str2, "a1a1\0a1");
free(str2);

#test to_lower19
char str1[] = "A1a\n1A1";
char *str2 = s21_to_lower(str1);
ck_assert_str_eq(str2, "a1a\n1a1");
free(str2);

#test to_lower20
char str1[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
char *str2 = s21_to_lower(str1);
ck_assert_str_eq(str2, "abcdefghijklmnopqrstuvwxyz");
free(str2);

#test insert1
char str1[] = "abc";
char str2[] = "def";
int n = 3;
char *str3 = s21_insert(str1, str2, n);
ck_assert_str_eq(str3, "abcdef");
free(str3);

#test insert2
char str1[] = "abc";
char str2[] = "def";
int n = 2;
char *str3 = s21_insert(str1, str2, n);
ck_assert_str_eq(str3, "abdefc");
free(str3);

#test insert3
char str1[] = "abc";
char str2[] = "def";
int n = 1;
char *str3 = s21_insert(str1, str2, n);
ck_assert_str_eq(str3, "adefbc");
free(str3);

#test insert4
char str1[] = "abc";
char str2[] = "def";
int n = 0;
char *str3 = s21_insert(str1, str2, n);
ck_assert_str_eq(str3, "defabc");
free(str3);

#test insert5
char str1[] = "abcdefghijkl123456789";
char str2[] = "xyz";
int n = 5;
char *str3 = s21_insert(str1, str2, n);
ck_assert_str_eq(str3, "abcdexyzfghijkl123456789");
free(str3);

#test insert6
char str1[] = "abc";
char str2[] = "";
int n = 0;
char *str3 = s21_insert(str1, str2, n);
ck_assert_str_eq(str3, "abc");
free(str3);

#test insert7
char str1[] = "abc";
char str2[] = "";
int n = 1;
char *str3 = s21_insert(str1, str2, n);
ck_assert_str_eq(str3, "abc");
free(str3);

#test insert8
char str1[] = "abc";
char str2[] = "";
int n = 3;
char *str3 = s21_insert(str1, str2, n);
ck_assert_str_eq(str3, "abc");
free(str3);

#test insert9
char str1[] = "";
char str2[] = "abc";
int n = 1;
char *str3 = s21_insert(str1, str2, n);
ck_assert_pstr_eq(str3, S21_NULL);
free(str3);

#test insert10
char str1[] = "";
char str2[] = "abc";
int n = 0;
char *str3 = s21_insert(str1, str2, n);
ck_assert_str_eq(str3, "abc");
free(str3);

#test insert11
char str1[] = "";
char str2[] = "abc";
int n = 3;
char *str3 = s21_insert(str1, str2, n);
ck_assert_pstr_eq(str3, S21_NULL);
free(str3);

#test insert12
char str1[] = "";
char str2[] = "";
int n = 3;
char *str3 = s21_insert(str1, str2, n);
ck_assert_pstr_eq(str3, S21_NULL);
free(str3);

#test insert13
char str1[] = "";
char str2[] = "";
int n = 0;
char *str3 = s21_insert(str1, str2, n);
ck_assert_str_eq(str3, "");
free(str3);

#test trim1
char str1[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
char str2[] = "ABC";
char *str3 = s21_trim(str1, str2);
ck_assert_str_eq(str3, "DEFGHIJKLMNOPQRSTUVWXYZ");
free(str3);

#test trim2
char str1[] = "ABCDEFGHIabcABCPQRSTUVWXYZ";
char str2[] = "ABC";
char *str3 = s21_trim(str1, str2);
ck_assert_str_eq(str3, "DEFGHIabcABCPQRSTUVWXYZ");
free(str3);

#test trim3
char str1[] = "ABCDEFGHIabcABCPQRSTUVWXYZABC";
char str2[] = "ABC";
char *str3 = s21_trim(str1, str2);
ck_assert_str_eq(str3, "DEFGHIabcABCPQRSTUVWXYZ");
free(str3);

#test trim4
char str1[] = "ABCDEFGHIabcABCPQRSTUVWXYZabc";
char str2[] = "ABC";
char *str3 = s21_trim(str1, str2);
ck_assert_str_eq(str3, "DEFGHIabcABCPQRSTUVWXYZabc");
free(str3);

#test trim5
char str1[] = "ABCDEFGHIabcABCPQRSTUVWXYZabc";
char str2[] = "abc";
char *str3 = s21_trim(str1, str2);
ck_assert_str_eq(str3, "ABCDEFGHIabcABCPQRSTUVWXYZ");
free(str3);

#test trim6
char str1[] = "abc123abc";
char str2[] = "abc";
char *str3 = s21_trim(str1, str2);
ck_assert_str_eq(str3, "123");
free(str3);

#test trim7
char str1[] = "abc123abc456abc";
char str2[] = "abc";
char *str3 = s21_trim(str1, str2);
ck_assert_str_eq(str3, "123abc456");
free(str3);

#test trim8
char str1[] = "a1bc123abc456a1bc";
char str2[] = "abc";
char *str3 = s21_trim(str1, str2);
ck_assert_str_eq(str3, "1bc123abc456a1");
free(str3);

#test trim9
char str1[] = "a1bc123abc456a1bc";
char str2[] = "a1bc";
char *str3 = s21_trim(str1, str2);
ck_assert_str_eq(str3, "23abc456");
free(str3);

#test trim10
char str1[] = "abc123abc456a1bc";
char str2[] = "ab2c";
char *str3 = s21_trim(str1, str2);
ck_assert_str_eq(str3, "123abc456a1");
free(str3);

#test trim11
char str1[] = "abc123abc456a1bc";
char str2[] = "ab12c";
char *str3 = s21_trim(str1, str2);
ck_assert_str_eq(str3, "3abc456");
free(str3);

#test trim12
char str1[] = "abAc123abc456aB1bc";
char str2[] = "ab12c";
char *str3 = s21_trim(str1, str2);
ck_assert_str_eq(str3, "Ac123abc456aB");
free(str3);

#test trim13
char str1[] = "abAc123abc456aB1bc";
char str2[] = "aBb12c";
char *str3 = s21_trim(str1, str2);
ck_assert_str_eq(str3, "Ac123abc456");
free(str3);

#test trim14
char str1[] = "11222333444aaaBaabaA53332244445677Babab7878998";
char str2[] = "aBbA12c";
char *str3 = s21_trim(str1, str2);
ck_assert_str_eq(str3, "333444aaaBaabaA53332244445677Babab7878998");
free(str3);

#test trim15
char str1[] = "11222333444aaaBaabaA53332244445677Babab7878998";
char str2[] = "4aB3bA12c";
char *str3 = s21_trim(str1, str2);
ck_assert_str_eq(str3, "53332244445677Babab7878998");
free(str3);

#test trim16
char str1[] = "11222333444aaaBaabaA53332244445677Babab7878998";
char str2[] = "4aB37bA897c";
char *str3 = s21_trim(str1, str2);
ck_assert_str_eq(str3, "11222333444aaaBaabaA533322444456");
free(str3);

#test trim17
char str1[] = "11222333444aaaBaabaA53332244445677Babab7878998";
char str2[] = "4223aB437bA189117c";
char *str3 = s21_trim(str1, str2);
ck_assert_str_eq(str3, "533322444456");
free(str3);

#test trim18
char str1[] = "11222333444aaaBaabaA53332244445677Babab7878998";
char str2[] = "4223aB6437bA1589117c";
char *str3 = s21_trim(str1, str2);
ck_assert_str_eq(str3, "");
free(str3);

#test trim19
char str1[] = "11222333444aaaBaabaA53332244445677Babab7878998";
char str2[] = "jK";
char *str3 = s21_trim(str1, str2);
ck_assert_str_eq(str3, "11222333444aaaBaabaA53332244445677Babab7878998");
free(str3);

#test trim20
char str1[] = "";
char str2[] = "jK";
char *str3 = s21_trim(str1, str2);
ck_assert_str_eq(str3, "");
free(str3);

#test trim21
char str1[] = "sdfghjk";
char str2[] = " ";
char *str3 = s21_trim(str1, str2);
ck_assert_str_eq(str3, "sdfghjk");
free(str3);

#test trim22
char str1[] = "sdfg hjk";
char str2[] = " ";
char *str3 = s21_trim(str1, str2);
ck_assert_str_eq(str3, "sdfg hjk");
free(str3);

#test trim23
char str1[] = " ";
char str2[] = " ";
char *str3 = s21_trim(str1, str2);
ck_assert_str_eq(str3, "");
free(str3);

#test trim24
char str1[] = "a231546yutiljkhgtyre565786oiu;jlkhb12";
char str2[] = "12333333333333333333333333333333333ab";
char *str3 = s21_trim(str1, str2);
ck_assert_str_eq(str3, "546yutiljkhgtyre565786oiu;jlkh");
free(str3);

#test trim25
char str1[] = "a231546yutiljkhgtyre565786oiu;jlkhb12";
char str2[] = "12333333333333333333333333333333333abmmmmmm";
char *str3 = s21_trim(str1, str2);
ck_assert_str_eq(str3, "546yutiljkhgtyre565786oiu;jlkh");
free(str3);

#test strerror0
int i = 0;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror1
int i = 1;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror2
int i = 2;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror3
int i = 3;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror4
int i = 4;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror5
int i = 5;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror6
int i = 6;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror7
int i = 7;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror8
int i = 8;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror9
int i = 9;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror10
int i = 10;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror11
int i = 11;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror12
int i = 12;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror13
int i = 13;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror14
int i = 14;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror15
int i = 15;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror16
int i = 16;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror17
int i = 17;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror18
int i = 18;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror19
int i = 19;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror20
int i = 20;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror21
int i = 21;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror22
int i = 22;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror23
int i = 23;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror24
int i = 24;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror25
int i = 25;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror26
int i = 26;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror27
int i = 27;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror28
int i = 28;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror29
int i = 29;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror30
int i = 30;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror31
int i = 31;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror32
int i = 32;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror33
int i = 33;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror34
int i = 34;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror35
int i = 35;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror36
int i = 36;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror37
int i = 37;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror38
int i = 38;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror39
int i = 39;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror40
int i = 40;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror41
int i = 41;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror42
int i = 42;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror43
int i = 43;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror44
int i = 44;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror45
int i = 45;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror46
int i = 46;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror47
int i = 47;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror48
int i = 48;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror49
int i = 49;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror50
int i = 50;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror51
int i = 51;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror52
int i = 52;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror53
int i = 53;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror54
int i = 54;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror55
int i = 55;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror56
int i = 56;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror57
int i = 57;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror58
int i = 58;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror59
int i = 59;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror60
int i = 60;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror61
int i = 61;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror62
int i = 62;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror63
int i = 63;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror64
int i = 64;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror65
int i = 65;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror66
int i = 66;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror67
int i = 67;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror68
int i = 68;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror69
int i = 69;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror70
int i = 70;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror71
int i = 71;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror72
int i = 72;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror73
int i = 73;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror74
int i = 74;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror75
int i = 75;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror76
int i = 76;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror77
int i = 77;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror78
int i = 78;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror79
int i = 79;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror80
int i = 80;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror81
int i = 81;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror82
int i = 82;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror83
int i = 83;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror84
int i = 84;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror85
int i = 85;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror86
int i = 86;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror87
int i = 87;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror88
int i = 88;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror89
int i = 89;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror90
int i = 90;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror91
int i = 91;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror92
int i = 92;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror93
int i = 93;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror94
int i = 94;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror95
int i = 95;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror96
int i = 96;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror97
int i = 97;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror98
int i = 98;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror99
int i = 99;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror100
int i = 100;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror101
int i = 101;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror102
int i = 102;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror103
int i = 103;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror104
int i = 104;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror105
int i = 105;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror106
int i = 106;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror107
int i = 107;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror108
int i = 108;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror__1
int i = -1;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test strerror109
int i = 109;
ck_assert_str_eq(strerror(i), s21_strerror(i));

#test sprintf_pr_1
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "Hello %%");
s21_sprintf(test_your, "Hello %%");
ck_assert_str_eq(test_original, test_your);

#test sprintf_pr_2
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "Hello 2022 World");
s21_sprintf(test_your, "Hello 2022 World");
ck_assert_str_eq(test_original, test_your);

#test sprintf_c_1
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "Hello %c", 'W');
s21_sprintf(test_your, "Hello %c", 'W');
ck_assert_str_eq(test_original, test_your);

#test sprintf_c_2
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "Hello %-5c", 'W');
s21_sprintf(test_your, "Hello %-5c", 'W');
ck_assert_str_eq(test_original, test_your);

#test sprintf_c_3
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "Hello %5c", 'W');
s21_sprintf(test_your, "Hello %5c", 'W');
ck_assert_str_eq(test_original, test_your);

#test sprintf_c_4
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "Hello %-c", 'W');
s21_sprintf(test_your, "Hello %-c", 'W');
ck_assert_str_eq(test_original, test_your);

#test sprintf_c_5
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "Hello %c", 'W');
s21_sprintf(test_your, "Hello %c", 'W');
ck_assert_str_eq(test_original, test_your);

#test sprintf_c_6
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "%cHello %c", 's', 'W');
s21_sprintf(test_your, "%cHello %c", 's', 'W');
ck_assert_str_eq(test_original, test_your);

#test sprintf_c_7
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "He%cllo %-5c", 's', 'W');
s21_sprintf(test_your, "He%cllo %-5c", 's', 'W');
ck_assert_str_eq(test_original, test_your);

#test sprintf_c_8
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "%5cHello %5c", 's', 'W');
s21_sprintf(test_your, "%5cHello %5c", 's', 'W');
ck_assert_str_eq(test_original, test_your);

#test sprintf_c_9
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "%-10cHello %-c", 's', 'W');
s21_sprintf(test_your, "%-10cHello %-c", 's', 'W');
ck_assert_str_eq(test_original, test_your);

#test sprintf_c_10
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "He%%llo %c", 'W');
s21_sprintf(test_your, "He%%llo %c", 'W');
ck_assert_str_eq(test_original, test_your);

#test sprintf_d_1
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "Hello %d", 23);
s21_sprintf(test_your, "Hello %d", 23);
ck_assert_str_eq(test_original, test_your);

#test sprintf_d_3
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "Hello %-6d", 23);
s21_sprintf(test_your, "Hello %-6d", 23);
ck_assert_str_eq(test_original, test_your);

#test sprintf_d_4
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "Hello %+d", 23);
s21_sprintf(test_your, "Hello %+d", 23);
ck_assert_str_eq(test_original, test_your);

#test sprintf_d_5
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "Hello % d", 23);
s21_sprintf(test_your, "Hello % d", 23);
ck_assert_str_eq(test_original, test_your);

#test sprintf_d_6
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "Hello %hd", 23);
s21_sprintf(test_your, "Hello %hd", 23);
ck_assert_str_eq(test_original, test_your);

#test sprintf_d_7
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "Hello %ld", 238230000006325000);
s21_sprintf(test_your, "Hello %ld", 238230000006325000);
ck_assert_str_eq(test_original, test_your);

#test sprintf_d_8
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "Hello % 10d", 23);
s21_sprintf(test_your, "Hello % 10d", 23);
ck_assert_str_eq(test_original, test_your);

#test sprintf_d_9
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "Hello %+10d", 23);
s21_sprintf(test_your, "Hello %+10d", 23);
ck_assert_str_eq(test_original, test_your);

#test sprintf_d_10
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "Hello %+10d", -23);
s21_sprintf(test_your, "Hello %+10d", -23);
ck_assert_str_eq(test_original, test_your);

#test sprintf_d_11
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "Hello % 10d", -23);
s21_sprintf(test_your, "Hello % 10d", -23);
ck_assert_str_eq(test_original, test_your);

#test sprintf_1
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "Hello %d %f", 5, -23.0);
s21_sprintf(test_your, "Hello %d %f", 5, -23.0);
ck_assert_str_eq(test_original, test_your);

#test sprintf_2
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "Hello %s %f", "abc", -23.0);
s21_sprintf(test_your, "Hello %s %f", "abc", -23.0);
ck_assert_str_eq(test_original, test_your);

#test sprintf_3
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "Hel%ulo %s %f", 100, "abc", -23.0);
s21_sprintf(test_your, "Hel%ulo %s %f", 100, "abc", -23.0);
ck_assert_str_eq(test_original, test_your);

#test sprintf_4
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "Hello %s %.3f", "abc", -23.0000001);
s21_sprintf(test_your, "Hello %s %.3f", "abc", -23.0000001);
ck_assert_str_eq(test_original, test_your);

#test sprintf_5
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "Hello %s %.7f", "abc", -23.999999);
s21_sprintf(test_your, "Hello %s %.7f", "abc", -23.999999);
ck_assert_str_eq(test_original, test_your);

#test sprintf_6
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "Hello %s %.3f", "abc", -23.999999);
s21_sprintf(test_your, "Hello %s %.3f", "abc", -23.999999);
ck_assert_str_eq(test_original, test_your);

#test sprintf_7
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "H%ldello %s", 1234567890123456789, "abcdefghtabcdefghtabcdefghtabcdefghtabcdefghtabcdefght");
s21_sprintf(test_your, "H%ldello %s", 1234567890123456789, "abcdefghtabcdefghtabcdefghtabcdefghtabcdefghtabcdefght");
ck_assert_str_eq(test_original, test_your);

#test sprintf_8
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "H%uello %s", 123456789, "abcdefghtabcdefghtabcdefghtabcdefghtabcdefghtabcdefght");
s21_sprintf(test_your, "H%uello %s", 123456789, "abcdefghtabcdefghtabcdefghtabcdefghtabcdefghtabcdefght");
ck_assert_str_eq(test_original, test_your);

#test sprintf_9
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "saeflkahj%lfdslkj", 1234.0);
s21_sprintf(test_your, "saeflkahj%lfdslkj", 1234.0);
ck_assert_str_eq(test_original, test_your);

#test sprintf_12
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "saeflkahj% 10.12f dslkj", 0.235300);
s21_sprintf(test_your, "saeflkahj% 10.12f dslkj", 0.235300);
ck_assert_str_eq(test_original, test_your);

#test sprintf_13
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "saeflkahj% 10.12f dslkj", -4353.235300);
s21_sprintf(test_your, "saeflkahj% 10.12f dslkj", -4353.235300);
ck_assert_str_eq(test_original, test_your);

#test sprintf_14
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "saeflkahj%-.12f dslkj", 4353.235300);
s21_sprintf(test_your, "saeflkahj%-.12f dslkj", 4353.235300);
ck_assert_str_eq(test_original, test_your);

#test sprintf_15
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "saeflkahj%-.12f dslkj", -4353.235300);
s21_sprintf(test_your, "saeflkahj%-.12f dslkj", -4353.235300);
ck_assert_str_eq(test_original, test_your);

#test sprintf_16
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "saeflkahj%-f dslkj", -4353.235300);
s21_sprintf(test_your, "saeflkahj%-f dslkj", -4353.235300);
ck_assert_str_eq(test_original, test_your);

#test sprintf_17
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "saeflkahj%-.12f dslkj", -4353.235300);
s21_sprintf(test_your, "saeflkahj%-.12f dslkj", -4353.235300);
ck_assert_str_eq(test_original, test_your);

#test sprintf_18
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "saeflkahj%-f dslkj", 0.235300);
s21_sprintf(test_your, "saeflkahj%-f dslkj", 0.235300);
ck_assert_str_eq(test_original, test_your);

#test sprintf_19
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "saeflkahj%+f dslkj", 0.235300);
s21_sprintf(test_your, "saeflkahj%+f dslkj", 0.235300);
ck_assert_str_eq(test_original, test_your);

#test sprintf_20
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "saeflkahj% f dslkj", -4353.235300);
s21_sprintf(test_your, "saeflkahj% f dslkj", -4353.235300);
ck_assert_str_eq(test_original, test_your);

#test sprintf_21
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "saeflkahj% 8f dslkj", -4353.235300);
s21_sprintf(test_your, "saeflkahj% 8f dslkj", -4353.235300);
ck_assert_str_eq(test_original, test_your);

#test sprintf_22
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "saeflkahj% -f dslkj", 4353.235300);
s21_sprintf(test_your, "saeflkahj% -f dslkj", 4353.235300);
ck_assert_str_eq(test_original, test_your);

#test sprintf_23
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "saeflkahj% -10f dslkj", -0.235300);
s21_sprintf(test_your, "saeflkahj% -10f dslkj", -0.235300);
ck_assert_str_eq(test_original, test_your);

#test sprintf_24
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "saeflkahj% .10f dslkj", -4353.235300);
s21_sprintf(test_your, "saeflkahj%.10f dslkj", -4353.235300);
ck_assert_str_eq(test_original, test_your);

#test sprintf_25
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "saeflkahj%.10f dslkj", 13.235300);
s21_sprintf(test_your, "saeflkahj%.10f dslkj", 13.235300);
ck_assert_str_eq(test_original, test_your);

#test sprintf_26
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "saeflkahj%.f dslkj", 12.235300);
s21_sprintf(test_your, "saeflkahj%.f dslkj", 12.235300);
ck_assert_str_eq(test_original, test_your);

#test sprintf_27
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "saeflkahj% .f dslkj", 345.235300);
s21_sprintf(test_your, "saeflkahj% .f dslkj", 345.235300);
ck_assert_str_eq(test_original, test_your);

#test sprintf_28
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "saeflkahj%10.f dslkj", 0.235300);
s21_sprintf(test_your, "saeflkahj%10.f dslkj", 0.235300);
ck_assert_str_eq(test_original, test_your);

#test sprintf_29
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "saeflkahj%+.f dslkj", -0.235300);
s21_sprintf(test_your, "saeflkahj%+.f dslkj", -0.235300);
ck_assert_str_eq(test_original, test_your);

#test sprintf_30
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "saeflkahj%-.f dslkj", 20.235300);
s21_sprintf(test_your, "saeflkahj%-.f dslkj", 20.235300);
ck_assert_str_eq(test_original, test_your);

#test sprintf_31
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "saeflkahj%f dslkj", 0.000000006);
s21_sprintf(test_your, "saeflkahj%f dslkj", 0.000000006);
ck_assert_str_eq(test_original, test_your);

#test sprintf_32
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "saeflkahj%.f dslkj", 0.000000006);
s21_sprintf(test_your, "saeflkahj%.f dslkj", 0.000000006);
ck_assert_str_eq(test_original, test_your);

#test sprintf_33
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "saeflkahj%12f dslkj", 0.000000006);
s21_sprintf(test_your, "saeflkahj%12f dslkj", 0.000000006);
ck_assert_str_eq(test_original, test_your);

#test sprintf_34
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "saeflkahj%.12f dslkj", 0.000000006);
s21_sprintf(test_your, "saeflkahj%.12f dslkj", 0.000000006);
ck_assert_str_eq(test_original, test_your);

#test sprintf_35
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "saeflkahj%-.12f dslkj", 0.000000006);
s21_sprintf(test_your, "saeflkahj%-.12f dslkj", 0.000000006);
ck_assert_str_eq(test_original, test_your);

#test sprintf_36
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "saeflkahj%%%%%%%%%% dslkj");
s21_sprintf(test_your, "saeflkahj%%%%%%%%%% dslkj");
ck_assert_str_eq(test_original, test_your);

#test sprintf_37
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "saeflkahj%%%%%%%%%%%-.12f dslkj", 0.000000006);
s21_sprintf(test_your, "saeflkahj%%%%%%%%%%%-.12f dslkj", 0.000000006);
ck_assert_str_eq(test_original, test_your);

#test sprintf_38
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "saeflkahj%s dslkj", "0.000000006");
s21_sprintf(test_your, "saeflkahj%s dslkj", "0.000000006");
ck_assert_str_eq(test_original, test_your);

#test sprintf_39
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "saeflkahjdslkj%s", "^&*(=...%");
s21_sprintf(test_your, "saeflkahjdslkj%s", "^&*(=...%");
ck_assert_str_eq(test_original, test_your);

#test sprintf_40
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "%ssaeflkahj dslkj", "^&*(=...%");
s21_sprintf(test_your, "%ssaeflkahj dslkj", "^&*(=...%");
ck_assert_str_eq(test_original, test_your);

#test sprintf_41
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "%ssaeflkahj%sdslkj%s", "^&*(=...%", "jk", "");
s21_sprintf(test_your, "%ssaeflkahj%sdslkj%s", "^&*(=...%", "jk", "");
ck_assert_str_eq(test_original, test_your);

#test sprintf_42
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "%ssaeflkahj%sdslkj%s", "", "", " ");
s21_sprintf(test_your, "%ssaeflkahj%sdslkj%s", "", "", " ");
ck_assert_str_eq(test_original, test_your);

#test sprintf_43
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "%-ssaeflkahj%1sdslkj%s", "^&*(=...%", "jk", "");
s21_sprintf(test_your, "%-ssaeflkahj%1sdslkj%s", "^&*(=...%", "jk", "");
ck_assert_str_eq(test_original, test_your);

#test sprintf_44
char test_original[1024] = "";
char test_your[1024] = "";
sprintf(test_original, "%3ssaeflkahj%1sdslkj%10s", "^&*(=...%", " ", "");
s21_sprintf(test_your, "%3ssaeflkahj%1sdslkj%10s", "^&*(=...%", " ", "");
ck_assert_str_eq(test_original, test_your);

#test int_sprintf_pr_1
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "Hello %%"), s21_sprintf(test_your, "Hello %%"));

#test int_sprintf_pr_2
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "Hello 2022 World"),s21_sprintf(test_your, "Hello 2022 World"));

#test int_sprintf_c_1
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "Hello %c", 'W'), s21_sprintf(test_your, "Hello %c", 'W'));

#test int_sprintf_c_2
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "Hello %-5c", 'W'), s21_sprintf(test_your, "Hello %-5c", 'W'));

#test int_sprintf_c_3
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "Hello %5c", 'W'), s21_sprintf(test_your, "Hello %5c", 'W'));

#test int_sprintf_c_4
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "Hello %-c", 'W'), s21_sprintf(test_your, "Hello %-c", 'W'));

#test int_sprintf_c_5
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "Hello %c", 'W'), s21_sprintf(test_your, "Hello %c", 'W'));

#test int_sprintf_c_6
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "%cHello %c", 's', 'W'), s21_sprintf(test_your, "%cHello %c", 's', 'W'));

#test int_sprintf_c_7
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "He%cllo %-5c", 's', 'W'), s21_sprintf(test_your, "He%cllo %-5c", 's', 'W'));

#test int_sprintf_c_8
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "%5cHello %5c", 's', 'W'), s21_sprintf(test_your, "%5cHello %5c", 's', 'W'));

#test int_sprintf_c_9
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "%-10cHello %-c", 's', 'W'), s21_sprintf(test_your, "%-10cHello %-c", 's', 'W'));

#test int_sprintf_c_10
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "He%%llo %c", 'W'), s21_sprintf(test_your, "He%%llo %c", 'W'));

#test int_sprintf_d_1
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "Hello %d", 23), s21_sprintf(test_your, "Hello %d", 23));

#test int_sprintf_d_3
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "Hello %-6d", 23), s21_sprintf(test_your, "Hello %-6d", 23));

#test int_sprintf_d_4
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "Hello %+d", 23), s21_sprintf(test_your, "Hello %+d", 23));

#test int_sprintf_d_5
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "Hello % d", 23), s21_sprintf(test_your, "Hello % d", 23));

#test int_sprintf_d_6
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "Hello %hd", 23), s21_sprintf(test_your, "Hello %hd", 23));

#test int_sprintf_d_7
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "Hello %ld", 238230000006325000), s21_sprintf(test_your, "Hello %ld", 238230000006325000));

#test int_sprintf_d_8
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "Hello % 10d", 23), s21_sprintf(test_your, "Hello % 10d", 23));

#test int_sprintf_d_9
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "Hello %+10d", 23), s21_sprintf(test_your, "Hello %+10d", 23));

#test int_sprintf_d_10
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "Hello %+10d", -23), s21_sprintf(test_your, "Hello %+10d", -23));

#test int_sprintf_d_11
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "Hello % 10d", -23), s21_sprintf(test_your, "Hello % 10d", -23));

#test int_sprintf_1
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "Hello %d %f", 5, -23.0), s21_sprintf(test_your, "Hello %d %f", 5, -23.0));

#test int_sprintf_2
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "Hello %s %f", "abc", -23.0), s21_sprintf(test_your, "Hello %s %f", "abc", -23.0));

#test int_sprintf_3
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "Hel%ulo %s %f", 100, "abc", -23.0), s21_sprintf(test_your, "Hel%ulo %s %f", 100, "abc", -23.0));

#test int_sprintf_4
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "Hello %s %.3f", "abc", -23.0000001), s21_sprintf(test_your, "Hello %s %.3f", "abc", -23.0000001));

#test int_sprintf_5
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "Hello %s %.7f", "abc", -23.999999), s21_sprintf(test_your, "Hello %s %.7f", "abc", -23.999999));

#test int_sprintf_6
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "Hello %s %.3f", "abc", -23.999999), s21_sprintf(test_your, "Hello %s %.3f", "abc", -23.999999));

#test int_sprintf_7
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "H%ldello %s", 1234567890123456789, "abcdefghtabcdefghtabcdefghtabcdefghtabcdefghtabcdefght"), s21_sprintf(test_your, "H%ldello %s", 1234567890123456789, "abcdefghtabcdefghtabcdefghtabcdefghtabcdefghtabcdefght"));

#test int_sprintf_8
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "H%uello %s", 123456789, "abcdefghtabcdefghtabcdefghtabcdefghtabcdefghtabcdefght"), s21_sprintf(test_your, "H%uello %s", 123456789, "abcdefghtabcdefghtabcdefghtabcdefghtabcdefghtabcdefght"));

#test int_sprintf_9
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "saeflkahj%lfdslkj", 1234.0), s21_sprintf(test_your, "saeflkahj%lfdslkj", 1234.0));

#test int_sprintf_12
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "saeflkahj% 10.12f dslkj", 0.235300), s21_sprintf(test_your, "saeflkahj% 10.12f dslkj", 0.235300));

#test int_sprintf_13
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "saeflkahj% 10.12f dslkj", -4353.235300), s21_sprintf(test_your, "saeflkahj% 10.12f dslkj", -4353.235300));

#test int_sprintf_14
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "saeflkahj%-.12f dslkj", 4353.235300), s21_sprintf(test_your, "saeflkahj%-.12f dslkj", 4353.235300));

#test int_sprintf_15
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "saeflkahj%-.12f dslkj", -4353.235300), s21_sprintf(test_your, "saeflkahj%-.12f dslkj", -4353.235300));

#test int_sprintf_16
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "saeflkahj%-f dslkj", -4353.235300), s21_sprintf(test_your, "saeflkahj%-f dslkj", -4353.235300));

#test int_sprintf_17
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "saeflkahj%-.12f dslkj", -4353.235300), s21_sprintf(test_your, "saeflkahj%-.12f dslkj", -4353.235300));

#test int_sprintf_18
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "saeflkahj%-f dslkj", 0.235300), s21_sprintf(test_your, "saeflkahj%-f dslkj", 0.235300));

#test int_sprintf_19
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "saeflkahj%+f dslkj", 0.235300), s21_sprintf(test_your, "saeflkahj%+f dslkj", 0.235300));

#test int_sprintf_20
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "saeflkahj% f dslkj", -4353.235300), s21_sprintf(test_your, "saeflkahj% f dslkj", -4353.235300));

#test int_sprintf_21
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "saeflkahj% 8f dslkj", -4353.235300), s21_sprintf(test_your, "saeflkahj% 8f dslkj", -4353.235300));

#test int_sprintf_22
char test_original[1024] = "";
char test_your[1024] = "";
ck_assert_int_eq(sprintf(test_original, "%s%s%s%s%s%ssaeflkahj% 8f dslkj", "ds", " ", " ", "0", "+", "9999999", -4353.235300), s21_sprintf(test_your, "%s%s%s%s%s%ssaeflkahj% 8f dslkj", "ds", " ", " ", "0", "+", "9999999", -4353.235300));

#test sprintf_222
char str1[1024] = "";
s21_sprintf(str1, "Hola %8d", 34);
char str2[1024] = "";
sprintf(str2, "Hola %8d", 34);
ck_assert_str_eq(str1, str2);

#test ssprintf_223
char str1[1024] = "";
s21_sprintf(str1, "Hola %-8d", 34);
char str2[1024] = "";
sprintf(str2, "Hola %-8d", 34);
ck_assert_str_eq(str1, str2);

#test sprintf_225
char str1[1024] = "";
s21_sprintf(str1, "Hola %18d", 34);
char str2[1024] = "";
sprintf(str2, "Hola %18d", 34);
ck_assert_str_eq(str1, str2);

#test ssprintf_226
char str1[1024] = "";
s21_sprintf(str1, "Hola %-18d", 34);
char str2[1024] = "";
sprintf(str2, "Hola %-18d", 34);
ck_assert_str_eq(str1, str2);

#test ssprintf_228
char str1[1024] = "";
s21_sprintf(str1, "Hola %-2d", 34423342);
char str2[1024] = "";
sprintf(str2, "Hola %-2d", 34423342);
ck_assert_str_eq(str1, str2);

#test ssprintf_229
char str1[1024] = "";
s21_sprintf(str1, "Hola %9s", "Mundo");
char str2[1024] = "";
sprintf(str2, "Hola %9s", "Mundo");
ck_assert_str_eq(str1, str2);

#test ssprintf_2210
char str1[1024] = "";
s21_sprintf(str1, "Hola %-9s", "Mundo");
char str2[1024] = "";
sprintf(str2, "Hola %-9s", "Mundo");
ck_assert_str_eq(str1, str2);

#test ssprintf_2211
char str1[1024] = "";
s21_sprintf(str1, "Hola %2s", "Mundo");
char str2[1024] = "";
sprintf(str2, "Hola %2s", "Mundo");
ck_assert_str_eq(str1, str2);

#test ssprintf_2212
char str1[1024] = "";
s21_sprintf(str1, "Hola %-2s", "Mundo");
char str2[1024] = "";
sprintf(str2, "Hola %-2s", "Mundo");
ck_assert_str_eq(str1, str2);

#test ssprintf_2213
char str1[1024] = "";
s21_sprintf(str1, "Hola %12s", "Mundo");
char str2[1024] = "";
sprintf(str2, "Hola %12s", "Mundo");
ck_assert_str_eq(str1, str2);

#test ssprintf_2214
char str1[1024] = "";
s21_sprintf(str1, "Hola %-12s", "Mundo");
char str2[1024] = "";
sprintf(str2, "Hola %-12s", "Mundo");
ck_assert_str_eq(str1, str2);

#test sprintf_231
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "Hola %d", 7);
sprintf(str1, "Hola %d", 7);
ck_assert_str_eq(str1, str2);

#test sprintf_232
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "%d:%d:%d", 7, 4, 0);
sprintf(str1, "%d:%d:%d", 7, 4, 0);
ck_assert_str_eq(str1, str2);

#test sprintf_233
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "MAX %d", INT_MAX);
sprintf(str1, "MAX %d", INT_MAX);
ck_assert_str_eq(str1, str2);

#test sprintf_234
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "MIN %d", INT_MIN);
sprintf(str1, "MIN %d", INT_MIN);
ck_assert_str_eq(str1, str2);

#test sprintf_235
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "Hola %i", 3534555);
sprintf(str1, "Hola %i", 3534555);
ck_assert_str_eq(str1, str2);

#test sprintf_236
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "Hola %+d", 3534555);
sprintf(str1, "Hola %+d", 3534555);
ck_assert_str_eq(str1, str2);

#test sprintf_237
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "padding '%5d'", 7);
sprintf(str1, "padding '%5d'", 7);
ck_assert_str_eq(str1, str2);

#test sprintf_238
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "padding '%5d'", INT_MAX);
sprintf(str1, "padding '%5d'", INT_MAX);
ck_assert_str_eq(str1, str2);

#test sprintf_239
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "padding '%5d'", INT_MIN);
sprintf(str1, "padding '%5d'", INT_MIN);
ck_assert_str_eq(str1, str2);

#test sprintf_2313
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "padding '%-5d'", 7);
sprintf(str1, "padding '%-5d'", 7);
ck_assert_str_eq(str1, str2);

#test sprintf_2314
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "padding '%-5d'", INT_MAX);
sprintf(str1, "padding '%-5d'", INT_MAX);
ck_assert_str_eq(str1, str2);

#test sprintf_2315
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "padding '%-5d'", INT_MIN);
sprintf(str1, "padding '%-5d'", INT_MIN);
ck_assert_str_eq(str1, str2);

#test sprintf_2316
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%.5d'", 7);
sprintf(str1, "precision '%.5d'", 7);
ck_assert_str_eq(str1, str2);

#test sprintf_2317
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%.5d'", INT_MAX);
sprintf(str1, "precision '%.5d'", INT_MAX);
ck_assert_str_eq(str1, str2);

#test sprintf_2318
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%.5d'", INT_MIN);
sprintf(str1, "precision '%.5d'", INT_MIN);
ck_assert_str_eq(str1, str2);

#test sprintf_2319
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%3.5d'", 7);
sprintf(str1, "precision '%3.5d'", 7);
ck_assert_str_eq(str1, str2);

#test sprintf_2320
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%3.5d'", INT_MAX);
sprintf(str1, "precision '%3.5d'", INT_MAX);
ck_assert_str_eq(str1, str2);

#test sprintf_2321
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%3.5d'", INT_MIN);
sprintf(str1, "precision '%3.5d'", INT_MIN);
ck_assert_str_eq(str1, str2);

#test sprintf_2322
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%-3.5d'", 7);
sprintf(str1, "precision '%-3.5d'", 7);
ck_assert_str_eq(str1, str2);

#test sprintf_2323
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%-3.5d'", INT_MAX);
sprintf(str1, "precision '%-3.5d'", INT_MAX);
ck_assert_str_eq(str1, str2);

#test sprintf_2324
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%-3.5d'", INT_MIN);
sprintf(str1, "precision '%-3.5d'", INT_MIN);
ck_assert_str_eq(str1, str2);

#test sprintf_2325
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "Hola %u", 7);
sprintf(str1, "Hola %u", 7);
ck_assert_str_eq(str1, str2);

#test sprintf_2326
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "%u:%u:%u", 7, 4, 0);
sprintf(str1, "%u:%u:%u", 7, 4, 0);
ck_assert_str_eq(str1, str2);

#test sprintf_2327
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "MAX %u", UINT_MAX);
sprintf(str1, "MAX %u", UINT_MAX);
ck_assert_str_eq(str1, str2);

#test sprintf_2328
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "MIN %u", 0);
sprintf(str1, "MIN %u", 0);
ck_assert_str_eq(str1, str2);

#test sprintf_2329
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "padding '%5u'", 7);
sprintf(str1, "padding '%5u'", 7);
ck_assert_str_eq(str1, str2);

#test sprintf_2330
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "padding '%5u'", UINT_MAX);
sprintf(str1, "padding '%5u'", UINT_MAX);
ck_assert_str_eq(str1, str2);

#test sprintf_2331
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "padding '%5u'", 0);
sprintf(str1, "padding '%5u'", 0);
ck_assert_str_eq(str1, str2);

#test sprintf_2332
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "padding '%-5u'", 7);
sprintf(str1, "padding '%-5u'", 7);
ck_assert_str_eq(str1, str2);

#test sprintf_2333
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "padding '%-5u'", UINT_MAX);
sprintf(str1, "padding '%-5u'", UINT_MAX);
ck_assert_str_eq(str1, str2);

#test sprintf_2334
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "padding '%-5u'", 0);
sprintf(str1, "padding '%-5u'", 0);
ck_assert_str_eq(str1, str2);

#test sprintf_2335
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%.5u'", 7);
sprintf(str1, "precision '%.5u'", 7);
ck_assert_str_eq(str1, str2);

#test sprintf_2336
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%.5u'", UINT_MAX);
sprintf(str1, "precision '%.5u'", UINT_MAX);
ck_assert_str_eq(str1, str2);

#test sprintf_2337
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%.5u'", 0);
sprintf(str1, "precision '%.5u'", 0);
ck_assert_str_eq(str1, str2);

#test sprintf_2338
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%3.5u'", 7);
sprintf(str1, "precision '%3.5u'", 7);
ck_assert_str_eq(str1, str2);

#test sprintf_2339
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%3.5u'", UINT_MAX);
sprintf(str1, "precision '%3.5u'", UINT_MAX);
ck_assert_str_eq(str1, str2);

#test sprintf_2340
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%3.5u'", 0);
sprintf(str1, "precision '%3.5u'", 0);
ck_assert_str_eq(str1, str2);

#test sprintf_2341
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%-3.5u'", 7);
sprintf(str1, "precision '%-3.5u'", 7);
ck_assert_str_eq(str1, str2);

#test sprintf_2342
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%-3.5u'", UINT_MAX);
sprintf(str1, "precision '%-3.5u'", UINT_MAX);
ck_assert_str_eq(str1, str2);

#test sprintf_2343
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%-3.5u'", 0);
sprintf(str1, "precision '%-3.5u'", 0);
ck_assert_str_eq(str1, str2);

#test sprintf_2344
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "Hola %ld", 3534535547l);
sprintf(str1, "Hola %ld", 3534535547l);
ck_assert_str_eq(str1, str2);

#test sprintf_2345
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "%ld:%ld:%ld", 7l, 34543245324l, 0l);
sprintf(str1, "%ld:%ld:%ld", 7l, 34543245324l, 0l);
ck_assert_str_eq(str1, str2);

#test sprintf_2346
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "%ld", -5435432542l);
sprintf(str1, "%ld", -5435432542l);
ck_assert_str_eq(str1, str2);

#test sprintf_2347
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "MAX %ld", LONG_MAX);
sprintf(str1, "MAX %ld", LONG_MAX);
ck_assert_str_eq(str1, str2);

#test sprintf_2348
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "MIN %ld", LONG_MIN);
sprintf(str1, "MIN %ld", LONG_MIN);
ck_assert_str_eq(str1, str2);

#test sprintf_2349
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "Hola %li", 3534535547l);
sprintf(str1, "Hola %li", 3534535547l);
ck_assert_str_eq(str1, str2);

#test sprintf_2350
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "padding '%5ld'", 72342l);
sprintf(str1, "padding '%5ld'", 72342l);
ck_assert_str_eq(str1, str2);

#test sprintf_2351
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "padding '%5ld'", LONG_MAX);
sprintf(str1, "padding '%5ld'", LONG_MAX);
ck_assert_str_eq(str1, str2);

#test sprintf_2352
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "padding '%5ld'", LONG_MIN);
sprintf(str1, "padding '%5ld'", LONG_MIN);
ck_assert_str_eq(str1, str2);

#test sprintf_2356
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "padding '%-5ld'", 742343l);
sprintf(str1, "padding '%-5ld'", 742343l);
ck_assert_str_eq(str1, str2);

#test sprintf_2357
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "padding '%-5ld'", LONG_MAX);
sprintf(str1, "padding '%-5ld'", LONG_MAX);
ck_assert_str_eq(str1, str2);

#test sprintf_2358
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "padding '%-5ld'", LONG_MIN);
sprintf(str1, "padding '%-5ld'", LONG_MIN);
ck_assert_str_eq(str1, str2);

#test sprintf_2359
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%.5ld'", 754354l);
sprintf(str1, "precision '%.5ld'", 754354l);
ck_assert_str_eq(str1, str2);

#test sprintf_2360
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%.5ld'", LONG_MAX);
sprintf(str1, "precision '%.5ld'", LONG_MAX);
ck_assert_str_eq(str1, str2);

#test sprintf_2361
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%.5ld'", LONG_MIN);
sprintf(str1, "precision '%.5ld'", LONG_MIN);
ck_assert_str_eq(str1, str2);

#test sprintf_2362
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%3.5ld'", 7343l);
sprintf(str1, "precision '%3.5ld'", 7343l);
ck_assert_str_eq(str1, str2);

#test sprintf_2363
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%3.5ld'", LONG_MAX);
sprintf(str1, "precision '%3.5ld'", LONG_MAX);
ck_assert_str_eq(str1, str2);

#test sprintf_2364
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%3.5ld'", LONG_MIN);
sprintf(str1, "precision '%3.5ld'", LONG_MIN);
ck_assert_str_eq(str1, str2);

#test sprintf_2365
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%-3.5ld'", 754354l);
sprintf(str1, "precision '%-3.5ld'", 754354l);
ck_assert_str_eq(str1, str2);

#test sprintf_2366
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%-3.5ld'", LONG_MAX);
sprintf(str1, "precision '%-3.5ld'", LONG_MAX);
ck_assert_str_eq(str1, str2);

#test sprintf_2367
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%-3.5ld'", LONG_MIN);
sprintf(str1, "precision '%-3.5ld'", LONG_MIN);
ck_assert_str_eq(str1, str2);

#test sprintf_2368
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "Hola %lu", 7l);
sprintf(str1, "Hola %lu", 7l);
ck_assert_str_eq(str1, str2);

#test sprintf_2369
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "%lu:%lu:%lu", 7l, 4l, 0l);
sprintf(str1, "%lu:%lu:%lu", 7l, 4l, 0l);
ck_assert_str_eq(str1, str2);

#test sprintf_2370
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "MAX %lu", ULONG_MAX);
sprintf(str1, "MAX %lu", ULONG_MAX);
ck_assert_str_eq(str1, str2);

#test sprintf_2371
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "MIN %lu", 0l);
sprintf(str1, "MIN %lu", 0l);
ck_assert_str_eq(str1, str2);

#test sprintf_2372
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "padding '%5lu'", 7l);
sprintf(str1, "padding '%5lu'", 7l);
ck_assert_str_eq(str1, str2);

#test sprintf_2373
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "padding '%5lu'", ULONG_MAX);
sprintf(str1, "padding '%5lu'", ULONG_MAX);
ck_assert_str_eq(str1, str2);

#test sprintf_2374
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "padding '%5lu'", 0l);
sprintf(str1, "padding '%5lu'", 0l);
ck_assert_str_eq(str1, str2);

#test sprintf_2375
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "padding '%-5lu'", 7l);
sprintf(str1, "padding '%-5lu'", 7l);
ck_assert_str_eq(str1, str2);

#test sprintf_2376
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "padding '%-5lu'", ULONG_MAX);
sprintf(str1, "padding '%-5lu'", ULONG_MAX);
ck_assert_str_eq(str1, str2);

#test sprintf_2377
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "padding '%-5lu'", 0l);
sprintf(str1, "padding '%-5lu'", 0l);
ck_assert_str_eq(str1, str2);

#test sprintf_2378
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%.5lu'", 7l);
sprintf(str1, "precision '%.5lu'", 7l);
ck_assert_str_eq(str1, str2);

#test sprintf_2379
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%.5lu'", ULONG_MAX);
sprintf(str1, "precision '%.5lu'", ULONG_MAX);
ck_assert_str_eq(str1, str2);

#test sprintf_2380
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%.5lu'", 0l);
sprintf(str1, "precision '%.5lu'", 0l);
ck_assert_str_eq(str1, str2);

#test sprintf_2381
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%3.5lu'", 7l);
sprintf(str1, "precision '%3.5lu'", 7l);
ck_assert_str_eq(str1, str2);

#test sprintf_2382
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%3.5lu'", ULONG_MAX);
sprintf(str1, "precision '%3.5lu'", ULONG_MAX);
ck_assert_str_eq(str1, str2);

#test sprintf_2383
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%3.5lu'", 0l);
sprintf(str1, "precision '%3.5lu'", 0l);
ck_assert_str_eq(str1, str2);

#test sprintf_2384
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%-3.5lu'", 7l);
sprintf(str1, "precision '%-3.5lu'", 7l);
ck_assert_str_eq(str1, str2);

#test sprintf_2385
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%-3.5lu'", ULONG_MAX);
sprintf(str1, "precision '%-3.5lu'", ULONG_MAX);
ck_assert_str_eq(str1, str2);

#test sprintf_2386
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%-3.5lu'", 0l);
sprintf(str1, "precision '%-3.5lu'", 0l);
ck_assert_str_eq(str1, str2);

#test sprintf_2387
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "%.5f", 3.5);
sprintf(str1, "%.5f", 3.5);
ck_assert_str_eq(str1, str2);

#test sprintf_2388
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "%.5f", -3.5);
sprintf(str1, "%.5f", -3.5);
ck_assert_str_eq(str1, str2);

#test sprintf_2391
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "%.5f", 0.0);
sprintf(str1, "%.5f", 0.0);
ck_assert_str_eq(str1, str2);

#test sprintf_2392
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "%.5f", 3.5458730589043);
sprintf(str1, "%.5f", 3.5458730589043);
ck_assert_str_eq(str1, str2);

#test sprintf_2393
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "%.5f", -3.5458730589043);
sprintf(str1, "%.5f", -3.5458730589043);
ck_assert_str_eq(str1, str2);

#test sprintf_2394
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "%10.4f", 3.5458730589043);
sprintf(str1, "%10.4f", 3.5458730589043);
ck_assert_str_eq(str1, str2);

#test sprintf_2395
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "%10.4f", -3.5458730589043);
sprintf(str1, "%10.4f", -3.5458730589043);
ck_assert_str_eq(str1, str2);

#test sprintf_2401
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "%10.5d", INT_MIN);
sprintf(str1, "%10.5d", INT_MIN);
ck_assert_str_eq(str1, str2);

#test sprintf_2402
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "%10.5d", INT_MAX);
sprintf(str1, "%10.5d", INT_MAX);
ck_assert_str_eq(str1, str2);

#test sprintf_2403
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "%10.5ld", LONG_MIN);
sprintf(str1, "%10.5ld", LONG_MIN);
ck_assert_str_eq(str1, str2);

#test sprintf_2404
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "%10.5ld", LONG_MAX);
sprintf(str1, "%10.5ld", LONG_MAX);
ck_assert_str_eq(str1, str2);

#test sprintf_2405
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "%10.5lu", ULONG_MAX);
sprintf(str1, "%10.5lu", ULONG_MAX);
ck_assert_str_eq(str1, str2);

#test sprintf_070501
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "%f", 6.1);
sprintf(str1, "%f", 6.1);
ck_assert_str_eq(str1, str2);

#test sprintf_070502
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "%f", 06.1);
sprintf(str1, "%f", 06.1);
ck_assert_str_eq(str1, str2);

#test sprintf_070503
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "%f", 6.01);
sprintf(str1, "%f", 6.01);
ck_assert_str_eq(str1, str2);

#test sprintf_070504
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "%.f", 6.01);
sprintf(str1, "%.f", 6.01);
ck_assert_str_eq(str1, str2);

#test sprintf_070505
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "%.0f", 6.01);
sprintf(str1, "%.0f", 6.01);
ck_assert_str_eq(str1, str2);

#test sprintf_070506
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "%.1f", 6.01);
sprintf(str1, "%.1f", 6.01);
ck_assert_str_eq(str1, str2);

#test sprintf_070507
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "%f", 1.23e+07);
sprintf(str1, "%f", 1.23e+07);
ck_assert_str_eq(str1, str2);

#test sprintf_070508
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "%f", 1234561e+00);
sprintf(str1, "%f", 1234561e+00);
ck_assert_str_eq(str1, str2);

#test sprintf_070509
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "%f", 1234561e+07);
sprintf(str1, "%f", 1234561e+07);
ck_assert_str_eq(str1, str2);

#test sprintf_070510
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "%.9f", 1000000000.00);
sprintf(str1, "%.9f", 1000000000.00);
ck_assert_str_eq(str1, str2);

#test sprintf_070513
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "%3.f", 0.0);
sprintf(str1, "%3.f", 0.0);
ck_assert_str_eq(str1, str2);

#test sprintf_2405x
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, " - %d - [%%h%%] - l.%d\n" - 2, __LINE__);
sprintf(str1, " - %d - [%%h%%] - l.%d\n" - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2406x
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, " - %d - [%%3.15h%%] - l.%d\n" - 2, __LINE__);
sprintf(str1, " - %d - [%%3.15h%%] - l.%d\n" - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2409
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, " - %d - [%%#0%%] - l.%d\n" - 2, __LINE__);
sprintf(str1, " - %d - [%%#0%%] - l.%d\n" - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2410
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, " - %d - [%%#015.20%%] - l.%d\n" - 2, __LINE__);
sprintf(str1, " - %d - [%%#015.20%%] - l.%d\n" - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2411
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, " - %d - [%%#0- 15.5%%] - l.%d\n" - 2, __LINE__);
sprintf(str1, " - %d - [%%#0- 15.5%%] - l.%d\n" - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2412
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, " - %d - [%%#0-+ 3.2%%] - l.%d\n" - 2, __LINE__);
sprintf(str1, " - %d - [%%#0-+ 3.2%%] - l.%d\n" - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2413
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, " - %d - [%%#0+ 3.2%%] - l.%d\n" - 2, __LINE__);
sprintf(str1, " - %d - [%%#0+ 3.2%%] - l.%d\n" - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2414
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, " - %d - [%%#0 15.5%%] - l.%d\n" - 2, __LINE__);
sprintf(str1, " - %d - [%%#0 15.5%%] - l.%d\n" - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2415
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, " - %d - [%%#-3%%] - l.%d\n" - 2, __LINE__);
sprintf(str1, " - %d - [%%#-3%%] - l.%d\n" - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2416
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, " - %d - [%%#-15.0%%] - l.%d\n" - 2, __LINE__);
sprintf(str1, " - %d - [%%#-15.0%%] - l.%d\n" - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2417
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, " - %d - [%%#-+15.0%%] - l.%d\n" - 2, __LINE__);
sprintf(str1, " - %d - [%%#-+15.0%%] - l.%d\n" - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2418
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, " - %d - [%%#- 15.0%%] - l.%d\n" - 2, __LINE__);
sprintf(str1, " - %d - [%%#- 15.0%%] - l.%d\n" - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2419
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, " - %d - [%%#-+ 15.0%%] - l.%d\n" - 2, __LINE__);
sprintf(str1, " - %d - [%%#-+ 15.0%%] - l.%d\n" - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2420
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, " - %d - [%%#-+ 15.20%%] - l.%d\n" - 2, __LINE__);
sprintf(str1, " - %d - [%%#-+ 15.20%%] - l.%d\n" - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2421
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, " - %d - [%%#+%%] - l.%d\n" - 2, __LINE__);
sprintf(str1, " - %d - [%%#+%%] - l.%d\n" - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2423
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, " - %d - [%%#+15%%] - l.%d\n" - 2, __LINE__);
sprintf(str1, " - %d - [%%#+15%%] - l.%d\n" - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2427
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, " - %d - [%%d] - l.%d\n" - 2, __LINE__);
sprintf(str1, " - %d - [%%d] - l.%d\n" - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2428
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "[%d]", 0);
sprintf(str1, "[%d]", 0);
ck_assert_str_eq(str1, str2);

#test sprintf_2429
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, " - %d - [%%15.20d] - l.%d\n" - 2, __LINE__);
sprintf(str1, " - %d - [%%15.20d] - l.%d\n" - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2430
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "[%15.20d]", 0);
sprintf(str1, "[%15.20d]", 0);
ck_assert_str_eq(str1, str2);

#test sprintf_2433
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "precision '%f'", 6.1);
sprintf(str1, "precision '%f'", 6.1);
ck_assert_str_eq(str1, str2);

#test sprintf_2434
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, " - %d - [%%f] - l.%d\n" - 2, __LINE__);
sprintf(str1, " - %d - [%%f] - l.%d\n" - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2436
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, " - %d - [%%3.15f] - l.%d\n" - 2, __LINE__);
sprintf(str1, " - %d - [%%3.15f] - l.%d\n" - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2708
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%d] - l.%d\n, [%d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%d] - l.%d\n, [%d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2709
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%d] - l.%d\n, [%d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%d] - l.%d\n, [%d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2710
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%d] - l.%d\n, [%d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%d] - l.%d\n, [%d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2711
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3d] - l.%d\n, [%3d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%3d] - l.%d\n, [%3d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2712
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3d] - l.%d\n, [%3d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%3d] - l.%d\n, [%3d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2713
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3d] - l.%d\n, [%3d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%3d] - l.%d\n, [%3d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2714
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.0d] - l.%d\n, [%3.0d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.0d] - l.%d\n, [%3.0d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2715
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.0d] - l.%d\n, [%3.0d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.0d] - l.%d\n, [%3.0d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2716
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.0d] - l.%d\n, [%3.0d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.0d] - l.%d\n, [%3.0d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2717
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.2d] - l.%d\n, [%3.2d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.2d] - l.%d\n, [%3.2d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2718
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.2d] - l.%d\n, [%3.2d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.2d] - l.%d\n, [%3.2d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2719
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.2d] - l.%d\n, [%3.2d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.2d] - l.%d\n, [%3.2d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2720
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.5d] - l.%d\n, [%3.5d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.5d] - l.%d\n, [%3.5d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2721
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.5d] - l.%d\n, [%3.5d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.5d] - l.%d\n, [%3.5d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2722
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.5d] - l.%d\n, [%3.5d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.5d] - l.%d\n, [%3.5d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2723
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.15d] - l.%d\n, [%3.15d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.15d] - l.%d\n, [%3.15d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2724
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.15d] - l.%d\n, [%3.15d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.15d] - l.%d\n, [%3.15d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2725
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.15d] - l.%d\n, [%3.15d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.15d] - l.%d\n, [%3.15d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2726
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15d] - l.%d\n, [%15d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%15d] - l.%d\n, [%15d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2727
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15d] - l.%d\n, [%15d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%15d] - l.%d\n, [%15d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2728
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15d] - l.%d\n, [%15d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%15d] - l.%d\n, [%15d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2729
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15.0d] - l.%d\n, [%15.0d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%15.0d] - l.%d\n, [%15.0d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2730
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15.0d] - l.%d\n, [%15.0d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%15.0d] - l.%d\n, [%15.0d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2731
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15.0d] - l.%d\n, [%15.0d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%15.0d] - l.%d\n, [%15.0d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2732
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15.5d] - l.%d\n, [%15.5d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%15.5d] - l.%d\n, [%15.5d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2733
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15.5d] - l.%d\n, [%15.5d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%15.5d] - l.%d\n, [%15.5d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2734
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15.5d] - l.%d\n, [%15.5d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%15.5d] - l.%d\n, [%15.5d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2735
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15.20d] - l.%d\n, [%15.20d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%15.20d] - l.%d\n, [%15.20d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2736
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15.20d] - l.%d\n, [%15.20d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%15.20d] - l.%d\n, [%15.20d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2737
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15.20d] - l.%d\n, [%15.20d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%15.20d] - l.%d\n, [%15.20d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2738
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-d] - l.%d\n, [%-d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-d] - l.%d\n, [%-d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2739
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3d] - l.%d\n, [%-3d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3d] - l.%d\n, [%-3d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2740
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.0d] - l.%d\n, [%-3.0d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.0d] - l.%d\n, [%-3.0d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2741
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.2d] - l.%d\n, [%-3.2d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.2d] - l.%d\n, [%-3.2d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2742
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.5d] - l.%d\n, [%-3.5d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.5d] - l.%d\n, [%-3.5d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2743
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.5d] - l.%d\n, [%-3.5d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.5d] - l.%d\n, [%-3.5d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2744
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.15d] - l.%d\n, [%-3.15d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.15d] - l.%d\n, [%-3.15d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2745
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.15d] - l.%d\n, [%-3.15d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.15d] - l.%d\n, [%-3.15d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2746
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.15d] - l.%d\n, [%-3.15d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.15d] - l.%d\n, [%-3.15d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2747
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+d] - l.%d\n, [%+d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%+d] - l.%d\n, [%+d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2748
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+d] - l.%d\n, [%+d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%+d] - l.%d\n, [%+d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2749
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+d] - l.%d\n, [%+d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%+d] - l.%d\n, [%+d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2750
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+3d] - l.%d\n, [%+3d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%+3d] - l.%d\n, [%+3d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2751
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+3d] - l.%d\n, [%+3d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%+3d] - l.%d\n, [%+3d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2752
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+3d] - l.%d\n, [%+3d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%+3d] - l.%d\n, [%+3d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2753
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+3d] - l.%d\n, [%+3d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%+3d] - l.%d\n, [%+3d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2754
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+3d] - l.%d\n, [%+3d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%+3d] - l.%d\n, [%+3d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2755
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+3d] - l.%d\n, [%+3d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%+3d] - l.%d\n, [%+3d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2756
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+3.5d] - l.%d\n, [%+3.5d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%+3.5d] - l.%d\n, [%+3.5d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2757
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+3.5d] - l.%d\n, [%+3.5d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%+3.5d] - l.%d\n, [%+3.5d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2758
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+3.5d] - l.%d\n, [%+3.5d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%+3.5d] - l.%d\n, [%+3.5d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2759
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+3.15d] - l.%d\n, [%+3.15d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%+3.15d] - l.%d\n, [%+3.15d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2760
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+3.15d] - l.%d\n, [%+3.15d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%+3.15d] - l.%d\n, [%+3.15d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2761
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+3.15d] - l.%d\n, [%+3.15d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%+3.15d] - l.%d\n, [%+3.15d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2762
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+15d] - l.%d\n, [%+15d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%+15d] - l.%d\n, [%+15d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2763
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+15d] - l.%d\n, [%+15d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%+15d] - l.%d\n, [%+15d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2764
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+15d] - l.%d\n, [%+15d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%+15d] - l.%d\n, [%+15d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2765
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+15.0d] - l.%d\n, [%+15.0d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%+15.0d] - l.%d\n, [%+15.0d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2766
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+15.0d] - l.%d\n, [%+15.0d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%+15.0d] - l.%d\n, [%+15.0d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2767
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+15.0d] - l.%d\n, [%+15.0d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%+15.0d] - l.%d\n, [%+15.0d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2768
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+15.5d] - l.%d\n, [%+15.5d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%+15.5d] - l.%d\n, [%+15.5d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2769
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+15.5d] - l.%d\n, [%+15.5d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%+15.5d] - l.%d\n, [%+15.5d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2770
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+15.5d] - l.%d\n, [%+15.5d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%+15.5d] - l.%d\n, [%+15.5d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2771
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+15.20d] - l.%d\n, [%+15.20d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%+15.20d] - l.%d\n, [%+15.20d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2772
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+15.20d] - l.%d\n, [%+15.20d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%+15.20d] - l.%d\n, [%+15.20d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2773
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+15.20d] - l.%d\n, [%+15.20d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%+15.20d] - l.%d\n, [%+15.20d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2774
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% d] - l.%d\n, [% d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%% d] - l.%d\n, [% d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2775
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% d] - l.%d\n, [% d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%% d] - l.%d\n, [% d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2776
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% d] - l.%d\n, [% d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%% d] - l.%d\n, [% d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2777
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 3d] - l.%d\n, [% 3d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%% 3d] - l.%d\n, [% 3d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2778
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 3d] - l.%d\n, [% 3d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%% 3d] - l.%d\n, [% 3d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2779
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 3d] - l.%d\n, [% 3d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%% 3d] - l.%d\n, [% 3d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2780
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, " - %d - [%% 3.0d] - l.%d\n, [% 3.0d]", 0, - 2, __LINE__);
sprintf(str1, " - %d - [%% 3.0d] - l.%d\n, [% 3.0d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2781
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, " - %d - [%% 3.0d] - l.%d\n, [% 3.0d]", INT_MIN, - 2, __LINE__);
sprintf(str1, " - %d - [%% 3.0d] - l.%d\n, [% 3.0d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2782
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, " - %d - [%% 3.0d] - l.%d\n, [% 3.0d]", INT_MAX, - 2, __LINE__);
sprintf(str1, " - %d - [%% 3.0d] - l.%d\n, [% 3.0d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2783
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 3.2d] - l.%d\n, [% 3.2d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%% 3.2d] - l.%d\n, [% 3.2d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2784
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 3.2d] - l.%d\n, [% 3.2d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%% 3.2d] - l.%d\n, [% 3.2d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2785
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 3.2d] - l.%d\n, [% 3.2d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%% 3.2d] - l.%d\n, [% 3.2d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2786
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 3.5d] - l.%d\n, [% 3.5d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%% 3.5d] - l.%d\n, [% 3.5d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2786_2
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 3.5d] - l.%d\n, [% 3.5d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%% 3.5d] - l.%d\n, [% 3.5d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2787
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 3.5d] - l.%d\n, [% 3.5d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%% 3.5d] - l.%d\n, [% 3.5d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2788
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 3.15d] - l.%d\n, [% 3.15d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%% 3.15d] - l.%d\n, [% 3.15d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2789
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 3.15d] - l.%d\n, [% 3.15d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%% 3.15d] - l.%d\n, [% 3.15d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2790
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 3.15d] - l.%d\n, [% 3.15d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%% 3.15d] - l.%d\n, [% 3.15d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2791
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 15d] - l.%d\n, [% 15d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%% 15d] - l.%d\n, [% 15d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2792
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 15d] - l.%d\n, [% 15d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%% 15d] - l.%d\n, [% 15d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2793
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 15d] - l.%d\n, [% 15d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%% 15d] - l.%d\n, [% 15d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2794
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 15.0d] - l.%d\n, [% 15.0d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%% 15.0d] - l.%d\n, [% 15.0d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2795
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 15.0d] - l.%d\n, [% 15.0d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%% 15.0d] - l.%d\n, [% 15.0d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2796
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 15.0d] - l.%d\n, [% 15.0d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%% 15.0d] - l.%d\n, [% 15.0d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2797
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 15.5d] - l.%d\n, [% 15.5d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%% 15.5d] - l.%d\n, [% 15.5d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2798
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 15.5d] - l.%d\n, [% 15.5d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%% 15.5d] - l.%d\n, [% 15.5d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2799
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 15.5d] - l.%d\n, [% 15.5d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%% 15.5d] - l.%d\n, [% 15.5d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2800
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 15.20d] - l.%d\n, [% 15.20d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%% 15.20d] - l.%d\n, [% 15.20d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2801
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 15.20d] - l.%d\n, [% 15.20d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%% 15.20d] - l.%d\n, [% 15.20d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2802
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 15.20d] - l.%d\n, [% 15.20d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%% 15.20d] - l.%d\n, [% 15.20d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2803
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%hd] - l.%d\n, [%hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%hd] - l.%d\n, [%hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2804
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%hd] - l.%d\n, [%hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%hd] - l.%d\n, [%hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2805
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%hd] - l.%d\n, [%hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%hd] - l.%d\n, [%hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2806
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3hd] - l.%d\n, [%3hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%3hd] - l.%d\n, [%3hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2807
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3hd] - l.%d\n, [%3hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%3hd] - l.%d\n, [%3hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2807_2
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3hd] - l.%d\n, [%3hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%3hd] - l.%d\n, [%3hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2808
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.0hd] - l.%d\n, [%3.0hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.0hd] - l.%d\n, [%3.0hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2809
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.0hd] - l.%d\n, [%3.0hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.0hd] - l.%d\n, [%3.0hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2810
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.0hd] - l.%d\n, [%3.0hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.0hd] - l.%d\n, [%3.0hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2811
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.2hd] - l.%d\n, [%3.2hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.2hd] - l.%d\n, [%3.2hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2812
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.2hd] - l.%d\n, [%3.2hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.2hd] - l.%d\n, [%3.2hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2813
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.2hd] - l.%d\n, [%3.2hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.2hd] - l.%d\n, [%3.2hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2814
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.5hd] - l.%d\n, [%3.5hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.5hd] - l.%d\n, [%3.5hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2815
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.5hd] - l.%d\n, [%3.5hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.5hd] - l.%d\n, [%3.5hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2816
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.5hd] - l.%d\n, [%3.5hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.5hd] - l.%d\n, [%3.5hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2817
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.15hd] - l.%d\n, [%3.15hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.15hd] - l.%d\n, [%3.15hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2818
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.15hd] - l.%d\n, [%3.15hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.15hd] - l.%d\n, [%3.15hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2819
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.15hd] - l.%d\n, [%3.15hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.15hd] - l.%d\n, [%3.15hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2820
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15hd] - l.%d\n, [%15hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%15hd] - l.%d\n, [%15hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2821
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15hd] - l.%d\n, [%15hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%15hd] - l.%d\n, [%15hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2822
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15hd] - l.%d\n, [%15hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%15hd] - l.%d\n, [%15hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2823
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15.0hd] - l.%d\n, [%15.0hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%15.0hd] - l.%d\n, [%15.0hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2824
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15.0hd] - l.%d\n, [%15.0hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%15.0hd] - l.%d\n, [%15.0hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2825
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15.0hd] - l.%d\n, [%15.0hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%15.0hd] - l.%d\n, [%15.0hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2826
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15.5hd] - l.%d\n, [%15.5hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%15.5hd] - l.%d\n, [%15.5hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2827
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15.5hd] - l.%d\n, [%15.5hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%15.5hd] - l.%d\n, [%15.5hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2828
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15.5hd] - l.%d\n, [%15.5hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%15.5hd] - l.%d\n, [%15.5hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2829
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15.20hd] - l.%d\n, [%15.20hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%15.20hd] - l.%d\n, [%15.20hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2830
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15.20hd] - l.%d\n, [%15.20hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%15.20hd] - l.%d\n, [%15.20hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2831
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15.20hd] - l.%d\n, [%15.20hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%15.20hd] - l.%d\n, [%15.20hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2832
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-hd] - l.%d\n, [%-hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-hd] - l.%d\n, [%-hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2833
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-hd] - l.%d\n, [%-hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-hd] - l.%d\n, [%-hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2834
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-hd] - l.%d\n, [%-hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-hd] - l.%d\n, [%-hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2835
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3hd] - l.%d\n, [%-3hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3hd] - l.%d\n, [%-3hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2836
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3hd] - l.%d\n, [%-3hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3hd] - l.%d\n, [%-3hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2837
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3hd] - l.%d\n, [%-3hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3hd] - l.%d\n, [%-3hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2838
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.0hd] - l.%d\n, [%-3.0hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.0hd] - l.%d\n, [%-3.0hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2839
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.0hd] - l.%d\n, [%-3.0hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.0hd] - l.%d\n, [%-3.0hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2840
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.0hd] - l.%d\n, [%-3.0hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.0hd] - l.%d\n, [%-3.0hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2841
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.2hd] - l.%d\n, [%-3.2hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.2hd] - l.%d\n, [%-3.2hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2842
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.2hd] - l.%d\n, [%-3.2hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.2hd] - l.%d\n, [%-3.2hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2843
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.2hd] - l.%d\n, [%-3.2hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.2hd] - l.%d\n, [%-3.2hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2844
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.5hd] - l.%d\n, [%-3.5hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.5hd] - l.%d\n, [%-3.5hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2845
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.5hd] - l.%d\n, [%-3.5hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.5hd] - l.%d\n, [%-3.5hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2846
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.5hd] - l.%d\n, [%-3.5hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.5hd] - l.%d\n, [%-3.5hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2847
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.15hd] - l.%d\n, [%-3.15hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.15hd] - l.%d\n, [%-3.15hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2848
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.15hd] - l.%d\n, [%-3.15hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.15hd] - l.%d\n, [%-3.15hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2849
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.15hd] - l.%d\n, [%-3.15hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.15hd] - l.%d\n, [%-3.15hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2850
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+hd] - l.%d\n, [%+hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%+hd] - l.%d\n, [%+hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2851
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+hd] - l.%d\n, [%+hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%+hd] - l.%d\n, [%+hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2852
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+hd] - l.%d\n, [%+hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%+hd] - l.%d\n, [%+hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2853
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+3hd] - l.%d\n, [%+3hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%+3hd] - l.%d\n, [%+3hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2854
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+3hd] - l.%d\n, [%+3hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%+3hd] - l.%d\n, [%+3hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2855
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+3hd] - l.%d\n, [%+3hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%+3hd] - l.%d\n, [%+3hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2856
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+3.0hd] - l.%d\n, [%+3.0hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%+3.0hd] - l.%d\n, [%+3.0hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2857
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+3.0hd] - l.%d\n, [%+3.0hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%+3.0hd] - l.%d\n, [%+3.0hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2858
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+3.0hd] - l.%d\n, [%+3.0hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%+3.0hd] - l.%d\n, [%+3.0hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2859
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+3.5hd] - l.%d\n, [%+3.5hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%+3.5hd] - l.%d\n, [%+3.5hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2860
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+3.5hd] - l.%d\n, [%+3.5hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%+3.5hd] - l.%d\n, [%+3.5hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2861
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+3.5hd] - l.%d\n, [%+3.5hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%+3.5hd] - l.%d\n, [%+3.5hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2862
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+3.15hd] - l.%d\n, [%+3.15hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%+3.15hd] - l.%d\n, [%+3.15hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2863
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+3.15hd] - l.%d\n, [%+3.15hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%+3.15hd] - l.%d\n, [%+3.15hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2864
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+3.15hd] - l.%d\n, [%+3.15hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%+3.15hd] - l.%d\n, [%+3.15hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2865
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+15hd] - l.%d\n, [%+15hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%+15hd] - l.%d\n, [%+15hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2866
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+15hd] - l.%d\n, [%+15hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%+15hd] - l.%d\n, [%+15hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2867
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+15hd] - l.%d\n, [%+15hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%+15hd] - l.%d\n, [%+15hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2868
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+15.0hd] - l.%d\n, [%+15.0hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%+15.0hd] - l.%d\n, [%+15.0hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2869
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+15.0hd] - l.%d\n, [%+15.0hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%+15.0hd] - l.%d\n, [%+15.0hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2870
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+15.0hd] - l.%d\n, [%+15.0hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%+15.0hd] - l.%d\n, [%+15.0hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2871
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+15.5hd] - l.%d\n, [%+15.5hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%+15.5hd] - l.%d\n, [%+15.5hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2872
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+15.5hd] - l.%d\n, [%+15.5hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%+15.5hd] - l.%d\n, [%+15.5hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2873
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+15.5hd] - l.%d\n, [%+15.5hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%+15.5hd] - l.%d\n, [%+15.5hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2874
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+15.20hd] - l.%d\n, [%+15.20hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%+15.20hd] - l.%d\n, [%+15.20hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2875
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+15.20hd] - l.%d\n, [%+15.20hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%+15.20hd] - l.%d\n, [%+15.20hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2876
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+15.20hd] - l.%d\n, [%+15.20hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%+15.20hd] - l.%d\n, [%+15.20hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2877
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% hd] - l.%d\n, [% hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%% hd] - l.%d\n, [% hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2878
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% hd] - l.%d\n, [% hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%% hd] - l.%d\n, [% hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2879
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% hd] - l.%d\n, [% hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%% hd] - l.%d\n, [% hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2880
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 3hd] - l.%d\n, [% 3hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%% 3hd] - l.%d\n, [% 3hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2881
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 3hd] - l.%d\n, [% 3hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%% 3hd] - l.%d\n, [% 3hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2882
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 3hd] - l.%d\n, [% 3hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%% 3hd] - l.%d\n, [% 3hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2883
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 3.0hd] - l.%d\n, [% 3.0hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%% 3.0hd] - l.%d\n, [% 3.0hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2884
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 3.0hd] - l.%d\n, [% 3.0hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%% 3.0hd] - l.%d\n, [% 3.0hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2885
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 3.0hd] - l.%d\n, [% 3.0hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%% 3.0hd] - l.%d\n, [% 3.0hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2886
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 3.2hd] - l.%d\n, [% 3.2hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%% 3.2hd] - l.%d\n, [% 3.2hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2887
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 3.2hd] - l.%d\n, [% 3.2hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%% 3.2hd] - l.%d\n, [% 3.2hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2888
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 3.2hd] - l.%d\n, [% 3.2hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%% 3.2hd] - l.%d\n, [% 3.2hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2889
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 3.5hd] - l.%d\n, [% 3.5hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%% 3.5hd] - l.%d\n, [% 3.5hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2890
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 3.5hd] - l.%d\n, [% 3.5hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%% 3.5hd] - l.%d\n, [% 3.5hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2891
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 3.5hd] - l.%d\n, [% 3.5hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%% 3.5hd] - l.%d\n, [% 3.5hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2892
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 3.15hd] - l.%d\n, [% 3.15hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%% 3.15hd] - l.%d\n, [% 3.15hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2893
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 3.15hd] - l.%d\n, [% 3.15hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%% 3.15hd] - l.%d\n, [% 3.15hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2894
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 3.15hd] - l.%d\n, [% 3.15hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%% 3.15hd] - l.%d\n, [% 3.15hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2895
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 15hd] - l.%d\n, [% 15hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%% 15hd] - l.%d\n, [% 15hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2896
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 15hd] - l.%d\n, [% 15hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%% 15hd] - l.%d\n, [% 15hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2897
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 15hd] - l.%d\n, [% 15hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%% 15hd] - l.%d\n, [% 15hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2898
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 15.0hd] - l.%d\n, [% 15.0hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%% 15.0hd] - l.%d\n, [% 15.0hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2899
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 15.0hd] - l.%d\n, [% 15.0hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%% 15.0hd] - l.%d\n, [% 15.0hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2900
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 15.0hd] - l.%d\n, [% 15.0hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%% 15.0hd] - l.%d\n, [% 15.0hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2901
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 15.5hd] - l.%d\n, [% 15.5hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%% 15.5hd] - l.%d\n, [% 15.5hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2902
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 15.5hd] - l.%d\n, [% 15.5hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%% 15.5hd] - l.%d\n, [% 15.5hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2903
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 15.5hd] - l.%d\n, [% 15.5hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%% 15.5hd] - l.%d\n, [% 15.5hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2904
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 15.20hd] - l.%d\n, [% 15.20hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%% 15.20hd] - l.%d\n, [% 15.20hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2905
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 15.20hd] - l.%d\n, [% 15.20hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%% 15.20hd] - l.%d\n, [% 15.20hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2906
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%% 15.20hd] - l.%d\n, [% 15.20hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%% 15.20hd] - l.%d\n, [% 15.20hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3013
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+d] - l.%d\n, [%-+d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+d] - l.%d\n, [%-+d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3014
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+d] - l.%d\n, [%-+d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+d] - l.%d\n, [%-+d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3015
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+d] - l.%d\n, [%-+d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+d] - l.%d\n, [%-+d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3016
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+3d] - l.%d\n, [%-+3d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+3d] - l.%d\n, [%-+3d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3017
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+3d] - l.%d\n, [%-+3d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+3d] - l.%d\n, [%-+3d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3018
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+3d] - l.%d\n, [%-+3d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+3d] - l.%d\n, [%-+3d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3019
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+3.0d] - l.%d\n, [%-+3.0d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+3.0d] - l.%d\n, [%-+3.0d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3020
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+3.0d] - l.%d\n, [%-+3.0d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+3.0d] - l.%d\n, [%-+3.0d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3021
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+3.0d] - l.%d\n, [%-+3.0d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+3.0d] - l.%d\n, [%-+3.0d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3021_2
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+3.2d] - l.%d\n, [%-+3.2d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+3.2d] - l.%d\n, [%-+3.2d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3022
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+3.2d] - l.%d\n, [%-+3.2d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+3.2d] - l.%d\n, [%-+3.2d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3023
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+3.2d] - l.%d\n, [%-+3.2d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+3.2d] - l.%d\n, [%-+3.2d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3024
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+3.5d] - l.%d\n, [%-+3.5d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+3.5d] - l.%d\n, [%-+3.5d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3025
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+3.5d] - l.%d\n, [%-+3.5d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+3.5d] - l.%d\n, [%-+3.5d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3026
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+3.5d] - l.%d\n, [%-+3.5d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+3.5d] - l.%d\n, [%-+3.5d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3027
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+3.15d] - l.%d\n, [%-+3.15d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+3.15d] - l.%d\n, [%-+3.15d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3028
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+3.15d] - l.%d\n, [%-+3.15d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+3.15d] - l.%d\n, [%-+3.15d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3029
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+3.15d] - l.%d\n, [%-+3.15d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+3.15d] - l.%d\n, [%-+3.15d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3030
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+15d] - l.%d\n, [%-+15d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+15d] - l.%d\n, [%-+15d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3031
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+15d] - l.%d\n, [%-+15d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+15d] - l.%d\n, [%-+15d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3032
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+15d] - l.%d\n, [%-+15d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+15d] - l.%d\n, [%-+15d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3033
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+15.0d] - l.%d\n, [%-+15.0d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+15.0d] - l.%d\n, [%-+15.0d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3034
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+15.0d] - l.%d\n, [%-+15.0d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+15.0d] - l.%d\n, [%-+15.0d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3035
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+15.0d] - l.%d\n, [%-+15.0d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+15.0d] - l.%d\n, [%-+15.0d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3036
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+15.5d] - l.%d\n, [%-+15.5d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+15.5d] - l.%d\n, [%-+15.5d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3037
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+15.5d] - l.%d\n, [%-+15.5d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+15.5d] - l.%d\n, [%-+15.5d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3038
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+15.5d] - l.%d\n, [%-+15.5d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+15.5d] - l.%d\n, [%-+15.5d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3039
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+15.20d] - l.%d\n, [%-+15.20d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+15.20d] - l.%d\n, [%-+15.20d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3040
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+15.20d] - l.%d\n, [%-+15.20d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+15.20d] - l.%d\n, [%-+15.20d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3041
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+15.20d] - l.%d\n, [%-+15.20d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+15.20d] - l.%d\n, [%-+15.20d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3072
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- d] - l.%d\n, [%- d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%- d] - l.%d\n, [%- d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3073
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- d] - l.%d\n, [%- d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%- d] - l.%d\n, [%- d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3074
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- d] - l.%d\n, [%- d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%- d] - l.%d\n, [%- d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3075
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 3d] - l.%d\n, [%- 3d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 3d] - l.%d\n, [%- 3d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3076
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 3d] - l.%d\n, [%- 3d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 3d] - l.%d\n, [%- 3d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3077
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 3d] - l.%d\n, [%- 3d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 3d] - l.%d\n, [%- 3d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3078
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 3.0d] - l.%d\n, [%- 3.0d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 3.0d] - l.%d\n, [%- 3.0d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3079
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 3.0d] - l.%d\n, [%- 3.0d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 3.0d] - l.%d\n, [%- 3.0d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3080
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 3.0d] - l.%d\n, [%- 3.0d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 3.0d] - l.%d\n, [%- 3.0d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3081
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 3.2d] - l.%d\n, [%- 3.2d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 3.2d] - l.%d\n, [%- 3.2d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3082
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 3.2d] - l.%d\n, [%- 3.2d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 3.2d] - l.%d\n, [%- 3.2d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3083
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 3.2d] - l.%d\n, [%- 3.2d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 3.2d] - l.%d\n, [%- 3.2d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3084
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 3.5d] - l.%d\n, [%- 3.5d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 3.5d] - l.%d\n, [%- 3.5d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3085
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 3.5d] - l.%d\n, [%- 3.5d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 3.5d] - l.%d\n, [%- 3.5d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3086
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 3.5d] - l.%d\n, [%- 3.5d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 3.5d] - l.%d\n, [%- 3.5d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3087
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 3.15d] - l.%d\n, [%- 3.15d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 3.15d] - l.%d\n, [%- 3.15d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3088
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 3.15d] - l.%d\n, [%- 3.15d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 3.15d] - l.%d\n, [%- 3.15d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3089
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 3.15d] - l.%d\n, [%- 3.15d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 3.15d] - l.%d\n, [%- 3.15d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3090
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 15d] - l.%d\n, [%- 15d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 15d] - l.%d\n, [%- 15d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3091
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 15d] - l.%d\n, [%- 15d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 15d] - l.%d\n, [%- 15d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3092
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 15d] - l.%d\n, [%- 15d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 15d] - l.%d\n, [%- 15d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3093
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 15.0d] - l.%d\n, [%- 15.0d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 15.0d] - l.%d\n, [%- 15.0d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3094
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 15.0d] - l.%d\n, [%- 15.0d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 15.0d] - l.%d\n, [%- 15.0d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3095
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 15.0d] - l.%d\n, [%- 15.0d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 15.0d] - l.%d\n, [%- 15.0d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3096
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 15.5d] - l.%d\n, [%- 15.5d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 15.5d] - l.%d\n, [%- 15.5d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3097
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 15.5d] - l.%d\n, [%- 15.5d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 15.5d] - l.%d\n, [%- 15.5d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3098
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 15.5d] - l.%d\n, [%- 15.5d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 15.5d] - l.%d\n, [%- 15.5d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3099
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 15.20d] - l.%d\n, [%- 15.20d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 15.20d] - l.%d\n, [%- 15.20d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3100
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 15.20d] - l.%d\n, [%- 15.20d]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 15.20d] - l.%d\n, [%- 15.20d]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3101
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 15.20d] - l.%d\n, [%- 15.20d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 15.20d] - l.%d\n, [%- 15.20d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3132
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+hd] - l.%d\n, [%-+hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+hd] - l.%d\n, [%-+hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3133
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+hd] - l.%d\n, [%-+hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+hd] - l.%d\n, [%-+hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3134
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+hd] - l.%d\n, [%-+hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+hd] - l.%d\n, [%-+hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3135
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+3hd] - l.%d\n, [%-+3hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+3hd] - l.%d\n, [%-+3hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3136
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+3hd] - l.%d\n, [%-+3hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+3hd] - l.%d\n, [%-+3hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3137
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+3hd] - l.%d\n, [%-+3hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+3hd] - l.%d\n, [%-+3hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3138
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+3.0hd] - l.%d\n, [%-+3.0hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+3.0hd] - l.%d\n, [%-+3.0hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3139
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+3.0hd] - l.%d\n, [%-+3.0hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+3.0hd] - l.%d\n, [%-+3.0hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3140
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+3.0hd] - l.%d\n, [%-+3.0hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+3.0hd] - l.%d\n, [%-+3.0hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3141
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+3.2hd] - l.%d\n, [%-+3.2hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+3.2hd] - l.%d\n, [%-+3.2hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3142
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+3.2hd] - l.%d\n, [%-+3.2hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+3.2hd] - l.%d\n, [%-+3.2hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3143
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+3.2hd] - l.%d\n, [%-+3.2hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+3.2hd] - l.%d\n, [%-+3.2hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3144
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+3.5hd] - l.%d\n, [%-+3.5hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+3.5hd] - l.%d\n, [%-+3.5hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3145
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+3.5hd] - l.%d\n, [%-+3.5hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+3.5hd] - l.%d\n, [%-+3.5hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3146
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+3.5hd] - l.%d\n, [%-+3.5hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+3.5hd] - l.%d\n, [%-+3.5hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3147
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+3.15hd] - l.%d\n, [%-+3.15hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+3.15hd] - l.%d\n, [%-+3.15hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3148
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+3.15hd] - l.%d\n, [%-+3.15hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+3.15hd] - l.%d\n, [%-+3.15hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3149
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+3.15hd] - l.%d\n, [%-+3.15hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+3.15hd] - l.%d\n, [%-+3.15hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3150
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+15hd] - l.%d\n, [%-+15hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+15hd] - l.%d\n, [%-+15hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3151
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+15hd] - l.%d\n, [%-+15hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+15hd] - l.%d\n, [%-+15hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3152
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+15hd] - l.%d\n, [%-+15hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+15hd] - l.%d\n, [%-+15hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3153
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+15.0hd] - l.%d\n, [%-+15.0hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+15.0hd] - l.%d\n, [%-+15.0hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3154
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+15.0hd] - l.%d\n, [%-+15.0hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+15.0hd] - l.%d\n, [%-+15.0hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3155
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+15.0hd] - l.%d\n, [%-+15.0hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+15.0hd] - l.%d\n, [%-+15.0hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3156
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+15.5hd] - l.%d\n, [%-+15.5hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+15.5hd] - l.%d\n, [%-+15.5hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3157
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+15.5hd] - l.%d\n, [%-+15.5hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+15.5hd] - l.%d\n, [%-+15.5hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3158
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+15.5hd] - l.%d\n, [%-+15.5hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+15.5hd] - l.%d\n, [%-+15.5hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3159
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+15.20hd] - l.%d\n, [%-+15.20hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+15.20hd] - l.%d\n, [%-+15.20hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3160
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+15.20hd] - l.%d\n, [%-+15.20hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+15.20hd] - l.%d\n, [%-+15.20hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3161
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-+15.20hd] - l.%d\n, [%-+15.20hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-+15.20hd] - l.%d\n, [%-+15.20hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3192
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- hd] - l.%d\n, [%- hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%- hd] - l.%d\n, [%- hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3193
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- hd] - l.%d\n, [%- hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%- hd] - l.%d\n, [%- hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3194
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- hd] - l.%d\n, [%- hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%- hd] - l.%d\n, [%- hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3195
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 3hd] - l.%d\n, [%- 3hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 3hd] - l.%d\n, [%- 3hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3196
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 3hd] - l.%d\n, [%- 3hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 3hd] - l.%d\n, [%- 3hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3197
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 3hd] - l.%d\n, [%- 3hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 3hd] - l.%d\n, [%- 3hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3198
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 3.0hd] - l.%d\n, [%- 3.0hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 3.0hd] - l.%d\n, [%- 3.0hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3199
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 3.0hd] - l.%d\n, [%- 3.0hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 3.0hd] - l.%d\n, [%- 3.0hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3200
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 3.0hd] - l.%d\n, [%- 3.0hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 3.0hd] - l.%d\n, [%- 3.0hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3201
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 3.2hd] - l.%d\n, [%- 3.2hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 3.2hd] - l.%d\n, [%- 3.2hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3202
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 3.2hd] - l.%d\n, [%- 3.2hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 3.2hd] - l.%d\n, [%- 3.2hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3203
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 3.2hd] - l.%d\n, [%- 3.2hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 3.2hd] - l.%d\n, [%- 3.2hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3204
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 3.5hd] - l.%d\n, [%- 3.5hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 3.5hd] - l.%d\n, [%- 3.5hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3205
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 3.5hd] - l.%d\n, [%- 3.5hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 3.5hd] - l.%d\n, [%- 3.5hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3206
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 3.5hd] - l.%d\n, [%- 3.5hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 3.5hd] - l.%d\n, [%- 3.5hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3207
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 3.15hd] - l.%d\n, [%- 3.15hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 3.15hd] - l.%d\n, [%- 3.15hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3208
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 3.15hd] - l.%d\n, [%- 3.15hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 3.15hd] - l.%d\n, [%- 3.15hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3209
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 3.15hd] - l.%d\n, [%- 3.15hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 3.15hd] - l.%d\n, [%- 3.15hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3210
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 15hd] - l.%d\n, [%- 15hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 15hd] - l.%d\n, [%- 15hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3211
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 15hd] - l.%d\n, [%- 15hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 15hd] - l.%d\n, [%- 15hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3212
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 15hd] - l.%d\n, [%- 15hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 15hd] - l.%d\n, [%- 15hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3213
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 15.0hd] - l.%d\n, [%- 15.0hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 15.0hd] - l.%d\n, [%- 15.0hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3214
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 15.0hd] - l.%d\n, [%- 15.0hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 15.0hd] - l.%d\n, [%- 15.0hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3215
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 15.0hd] - l.%d\n, [%- 15.0hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 15.0hd] - l.%d\n, [%- 15.0hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3216
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 15.5hd] - l.%d\n, [%- 15.5hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 15.5hd] - l.%d\n, [%- 15.5hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3217
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 15.5hd] - l.%d\n, [%- 15.5hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 15.5hd] - l.%d\n, [%- 15.5hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3218
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 15.5hd] - l.%d\n, [%- 15.5hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 15.5hd] - l.%d\n, [%- 15.5hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3219
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 15.20hd] - l.%d\n, [%- 15.20hd]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 15.20hd] - l.%d\n, [%- 15.20hd]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3220
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 15.20hd] - l.%d\n, [%- 15.20hd]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 15.20hd] - l.%d\n, [%- 15.20hd]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3221
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%- 15.20hd] - l.%d\n, [%- 15.20hd]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%- 15.20hd] - l.%d\n, [%- 15.20hd]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_3373
char str1[1024] = "";
char str2[1024] = "";
char *str = "Hello World";
s21_sprintf(str2, "- %d - [%%s] - l.%d\n, [%s]", - 2, __LINE__, str);
sprintf(str1, "- %d - [%%s] - l.%d\n, [%s]", - 2, __LINE__ - 1, str);
ck_assert_str_eq(str1, str2);

#test sprintf_3374
char str1[1024] = "";
char str2[1024] = "";
char *str = NULL;
s21_sprintf(str2, "- %d - [%%s] - l.%d\n, [%s]", - 2, __LINE__, str);
sprintf(str1, "- %d - [%%s] - l.%d\n, [%s]", - 2, __LINE__ - 1, str);
ck_assert_str_eq(str1, str2);

#test sprintf_3375
char str1[1024] = "";
char str2[1024] = "";
char *str = "Hello World";
s21_sprintf(str2, "- %d - [%%3s] - l.%d\n, [%3s]", - 2, __LINE__, str);
sprintf(str1, "- %d - [%%3s] - l.%d\n, [%3s]", - 2, __LINE__ - 1, str);
ck_assert_str_eq(str1, str2);

#test sprintf_3376
char str1[1024] = "";
char str2[1024] = "";
char *str = NULL;
s21_sprintf(str2, "- %d - [%%3s] - l.%d\n, [%3s]", - 2, __LINE__, str);
sprintf(str1, "- %d - [%%3s] - l.%d\n, [%3s]", - 2, __LINE__ - 1, str);
ck_assert_str_eq(str1, str2);

#test sprintf_3377
char str1[1024] = "";
char str2[1024] = "";
char *str = "Hello World";
s21_sprintf(str2, "- %d - [%%3.0s] - l.%d\n, [%3.0s]", - 2, __LINE__, str);
sprintf(str1, "- %d - [%%3.0s] - l.%d\n, [%3.0s]", - 2, __LINE__ - 1, str);
ck_assert_str_eq(str1, str2);

#test sprintf_3378
char str1[1024] = "";
char str2[1024] = "";
char *str = NULL;
s21_sprintf(str2, "- %d - [%%3.0s] - l.%d\n, [%3.0s]", - 2, __LINE__, str);
sprintf(str1, "- %d - [%%3.0s] - l.%d\n, [%3.0s]", - 2, __LINE__ - 1, str);
ck_assert_str_eq(str1, str2);

#test sprintf_3379
char str1[1024] = "";
char str2[1024] = "";
char *str = "Hello World";
s21_sprintf(str2, "- %d - [%%3.2s] - l.%d\n, [%3.2s]", - 2, __LINE__, str);
sprintf(str1, "- %d - [%%3.2s] - l.%d\n, [%3.2s]", - 2, __LINE__ - 1, str);
ck_assert_str_eq(str1, str2);

#test sprintf_3380
char str1[1024] = "";
char str2[1024] = "";
char *str = NULL;
s21_sprintf(str2, "- %d - [%%3.2s] - l.%d\n, [%3.2s]", - 2, __LINE__, str);
sprintf(str1, "- %d - [%%3.2s] - l.%d\n, [%3.2s]", - 2, __LINE__ - 1, str);
ck_assert_str_eq(str1, str2);

#test sprintf_3381
char str1[1024] = "";
char str2[1024] = "";
char *str = "Hello World";
s21_sprintf(str2, "- %d - [%%3.5s] - l.%d\n, [%3.5s]", - 2, __LINE__, str);
sprintf(str1, "- %d - [%%3.5s] - l.%d\n, [%3.5s]", - 2, __LINE__ - 1, str);
ck_assert_str_eq(str1, str2);

#test sprintf_3382
char str1[1024] = "";
char str2[1024] = "";
char *str = NULL;
s21_sprintf(str2, "- %d - [%%3.5s] - l.%d\n, [%3.5s]", - 2, __LINE__, str);
sprintf(str1, "- %d - [%%3.5s] - l.%d\n, [%3.5s]", - 2, __LINE__ - 1, str);
ck_assert_str_eq(str1, str2);

#test sprintf_3383
char str1[1024] = "";
char str2[1024] = "";
char *str = "Hello World";
s21_sprintf(str2, "- %d - [%%3.25s] - l.%d\n, [%3.25s]", - 2, __LINE__, str);
sprintf(str1, "- %d - [%%3.25s] - l.%d\n, [%3.25s]", - 2, __LINE__ - 1, str);
ck_assert_str_eq(str1, str2);

#test sprintf_3384
char str1[1024] = "";
char str2[1024] = "";
char *str = NULL;
s21_sprintf(str2, "- %d - [%%3.25s] - l.%d\n, [%3.25s]", - 2, __LINE__, str);
sprintf(str1, "- %d - [%%3.25s] - l.%d\n, [%3.25s]", - 2, __LINE__ - 1, str);
ck_assert_str_eq(str1, str2);

#test sprintf_3385
char str1[1024] = "";
char str2[1024] = "";
char *str = "Hello World";
s21_sprintf(str2, "- %d - [%%25s] - l.%d\n, [%25s]", - 2, __LINE__, str);
sprintf(str1, "- %d - [%%25s] - l.%d\n, [%25s]", - 2, __LINE__ - 1, str);
ck_assert_str_eq(str1, str2);

#test sprintf_3386
char str1[1024] = "";
char str2[1024] = "";
char *str = NULL;
s21_sprintf(str2, "- %d - [%%25s] - l.%d\n, [%25s]", - 2, __LINE__, str);
sprintf(str1, "- %d - [%%25s] - l.%d\n, [%25s]", - 2, __LINE__ - 1, str);
ck_assert_str_eq(str1, str2);

#test sprintf_3387
char str1[1024] = "";
char str2[1024] = "";
char *str = "Hello World";
s21_sprintf(str2, "- %d - [%%25.0s] - l.%d\n, [%25.0s]", - 2, __LINE__, str);
sprintf(str1, "- %d - [%%25.0s] - l.%d\n, [%25.0s]", - 2, __LINE__ - 1, str);
ck_assert_str_eq(str1, str2);

#test sprintf_3388
char str1[1024] = "";
char str2[1024] = "";
char *str = NULL;
s21_sprintf(str2, "- %d - [%%25.0s] - l.%d\n, [%25.0s]", - 2, __LINE__, str);
sprintf(str1, "- %d - [%%25.0s] - l.%d\n, [%25.0s]", - 2, __LINE__ - 1, str);
ck_assert_str_eq(str1, str2);

#test sprintf_3389
char str1[1024] = "";
char str2[1024] = "";
char *str = "Hello World";
s21_sprintf(str2, "- %d - [%%25.5s] - l.%d\n, [%25.5s]", - 2, __LINE__, str);
sprintf(str1, "- %d - [%%25.5s] - l.%d\n, [%25.5s]", - 2, __LINE__ - 1, str);
ck_assert_str_eq(str1, str2);

#test sprintf_3390
char str1[1024] = "";
char str2[1024] = "";
char *str = NULL;
s21_sprintf(str2, "- %d - [%%25.5s] - l.%d\n, [%25.5s]", - 2, __LINE__, str);
sprintf(str1, "- %d - [%%25.5s] - l.%d\n, [%25.5s]", - 2, __LINE__ - 1, str);
ck_assert_str_eq(str1, str2);

#test sprintf_3391
char str1[1024] = "";
char str2[1024] = "";
char *str = "Hello World";
s21_sprintf(str2, "- %d - [%%-s] - l.%d\n, [%-s]", - 2, __LINE__, str);
sprintf(str1, "- %d - [%%-s] - l.%d\n, [%-s]", - 2, __LINE__ - 1, str);
ck_assert_str_eq(str1, str2);

#test sprintf_3392
char str1[1024] = "";
char str2[1024] = "";
char *str = NULL;
s21_sprintf(str2, "- %d - [%%-s] - l.%d\n, [%-s]", - 2, __LINE__, str);
sprintf(str1, "- %d - [%%-s] - l.%d\n, [%-s]", - 2, __LINE__ - 1, str);
ck_assert_str_eq(str1, str2);

#test sprintf_3393
char str1[1024] = "";
char str2[1024] = "";
char *str = "Hello World";
s21_sprintf(str2, "- %d - [%%-3s] - l.%d\n, [%-3s]", - 2, __LINE__, str);
sprintf(str1, "- %d - [%%-3s] - l.%d\n, [%-3s]", - 2, __LINE__ - 1, str);
ck_assert_str_eq(str1, str2);

#test sprintf_3394
char str1[1024] = "";
char str2[1024] = "";
char *str = NULL;
s21_sprintf(str2, "- %d - [%%-3s] - l.%d\n, [%-3s]", - 2, __LINE__, str);
sprintf(str1, "- %d - [%%-3s] - l.%d\n, [%-3s]", - 2, __LINE__ - 1, str);
ck_assert_str_eq(str1, str2);

#test sprintf_3395
char str1[1024] = "";
char str2[1024] = "";
char *str = "Hello World";
s21_sprintf(str2, "- %d - [%%-3.0s] - l.%d\n, [%-3.0s]", - 2, __LINE__, str);
sprintf(str1, "- %d - [%%-3.0s] - l.%d\n, [%-3.0s]", - 2, __LINE__ - 1, str);
ck_assert_str_eq(str1, str2);

#test sprintf_3396
char str1[1024] = "";
char str2[1024] = "";
char *str = NULL;
s21_sprintf(str2, "- %d - [%%-3.0s] - l.%d\n, [%-3.0s]", - 2, __LINE__, str);
sprintf(str1, "- %d - [%%-3.0s] - l.%d\n, [%-3.0s]", - 2, __LINE__ - 1, str);
ck_assert_str_eq(str1, str2);

#test sprintf_3397
char str1[1024] = "";
char str2[1024] = "";
char *str = "Hello World";
s21_sprintf(str2, "- %d - [%%-3.2s] - l.%d\n, [%-3.2s]", - 2, __LINE__, str);
sprintf(str1, "- %d - [%%-3.2s] - l.%d\n, [%-3.2s]", - 2, __LINE__ - 1, str);
ck_assert_str_eq(str1, str2);

#test sprintf_3398
char str1[1024] = "";
char str2[1024] = "";
char *str = NULL;
s21_sprintf(str2, "- %d - [%%-3.2s] - l.%d\n, [%-3.2s]", - 2, __LINE__, str);
sprintf(str1, "- %d - [%%-3.2s] - l.%d\n, [%-3.2s]", - 2, __LINE__ - 1, str);
ck_assert_str_eq(str1, str2);

#test sprintf_3399
char str1[1024] = "";
char str2[1024] = "";
char *str = "Hello World";
s21_sprintf(str2, "- %d - [%%-3.5s] - l.%d\n, [%-3.5s]", - 2, __LINE__, str);
sprintf(str1, "- %d - [%%-3.5s] - l.%d\n, [%-3.5s]", - 2, __LINE__ - 1, str);
ck_assert_str_eq(str1, str2);

#test sprintf_3400
char str1[1024] = "";
char str2[1024] = "";
char *str = NULL;
s21_sprintf(str2, "- %d - [%%-3.5s] - l.%d\n, [%-3.5s]", - 2, __LINE__, str);
sprintf(str1, "- %d - [%%-3.5s] - l.%d\n, [%-3.5s]", - 2, __LINE__ - 1, str);
ck_assert_str_eq(str1, str2);

#test sprintf_3401
char str1[1024] = "";
char str2[1024] = "";
char *str = "Hello World";
s21_sprintf(str2, "- %d - [%%-3.25s] - l.%d\n, [%-3.25s]", - 2, __LINE__, str);
sprintf(str1, "- %d - [%%-3.25s] - l.%d\n, [%-3.25s]", - 2, __LINE__ - 1, str);
ck_assert_str_eq(str1, str2);

#test sprintf_3402
char str1[1024] = "";
char str2[1024] = "";
char *str = NULL;
s21_sprintf(str2, "- %d - [%%-3.25s] - l.%d\n, [%-3.25s]", - 2, __LINE__, str);
sprintf(str1, "- %d - [%%-3.25s] - l.%d\n, [%-3.25s]", - 2, __LINE__ - 1, str);
ck_assert_str_eq(str1, str2);

#test sprintf_3523
char str1[1024] = "";
char str2[1024] = "";
char *str = "Hello World";
s21_sprintf(str2, "- %d - [%%c] - l.%d\n, [%c]", - 2, __LINE__, *str);
sprintf(str1, "- %d - [%%c] - l.%d\n, [%c]", - 2, __LINE__ - 1, *str);
ck_assert_str_eq(str1, str2);

#test sprintf_3525
char str1[1024] = "";
char str2[1024] = "";
char *str = "Hello World";
s21_sprintf(str2, "- %d - [%%3c] - l.%d\n, [%3c]", - 2, __LINE__, *str);
sprintf(str1, "- %d - [%%3c] - l.%d\n, [%3c]", - 2, __LINE__ - 1, *str);
ck_assert_str_eq(str1, str2);

#test sprintf_3535
char str1[1024] = "";
char str2[1024] = "";
char *str = "Hello World";
s21_sprintf(str2, "- %d - [%%25c] - l.%d\n, [%25c]", - 2, __LINE__, *str);
sprintf(str1, "- %d - [%%25c] - l.%d\n, [%25c]", - 2, __LINE__ - 1, *str);
ck_assert_str_eq(str1, str2);

#test sprintf_3554
char str1[1024] = "";
char str2[1024] = "";
char *str = "Hello World";
s21_sprintf(str2, "- %d - [%%-c] - l.%d\n, [%-c]", - 2, __LINE__, *str);
sprintf(str1, "- %d - [%%-c] - l.%d\n, [%-c]", - 2, __LINE__ - 1, *str);
ck_assert_str_eq(str1, str2);

#test sprintf_3555
char str1[1024] = "";
char str2[1024] = "";
char *str = "Hello World";
s21_sprintf(str2, "- %d - [%%-3c] - l.%d\n, [%-3c]", - 2, __LINE__, *str);
sprintf(str1, "- %d - [%%-3c] - l.%d\n, [%-3c]", - 2, __LINE__ - 1, *str);
ck_assert_str_eq(str1, str2);

#test sprintf_2708_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%i] - l.%d\n, [%i]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%i] - l.%d\n, [%i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2709_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%i] - l.%d\n, [%i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%i] - l.%d\n, [%i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2710_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%i] - l.%d\n, [%i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%i] - l.%d\n, [%i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2711i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3d] - l.%d\n, [%3d]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%3d] - l.%d\n, [%3d]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2712i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3i] - l.%d\n, [%3i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%3i] - l.%d\n, [%3i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2713i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3i] - l.%d\n, [%3i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%3i] - l.%d\n, [%3i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2714i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.0i] - l.%d\n, [%3.0i]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.0i] - l.%d\n, [%3.0i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2715i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.0i] - l.%d\n, [%3.0i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.0i] - l.%d\n, [%3.0i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2716i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.0d] - l.%d\n, [%3.0d]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.0d] - l.%d\n, [%3.0d]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2717i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.2i] - l.%d\n, [%3.2i]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.2i] - l.%d\n, [%3.2i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2718i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.2i] - l.%d\n, [%3.2i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.2i] - l.%d\n, [%3.2i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2719i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.2i] - l.%d\n, [%3.2i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.2i] - l.%d\n, [%3.2i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2720i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.5i] - l.%d\n, [%3.5i]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.5i] - l.%d\n, [%3.5i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2721i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.5i] - l.%d\n, [%3.5i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.5i] - l.%d\n, [%3.5i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2722i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.5i] - l.%d\n, [%3.5i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.5i] - l.%d\n, [%3.5i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2723i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.15i] - l.%d\n, [%3.15i]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.15i] - l.%d\n, [%3.15i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2724i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.15i] - l.%d\n, [%3.15i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.15i] - l.%d\n, [%3.15i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2725i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.15i] - l.%d\n, [%3.15i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.15i] - l.%d\n, [%3.15i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2726i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15i] - l.%d\n, [%15i]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%15i] - l.%d\n, [%15i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2727i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15i] - l.%d\n, [%15i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%15i] - l.%d\n, [%15i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2728i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15i] - l.%d\n, [%15i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%15i] - l.%d\n, [%15i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2729i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15.0i] - l.%d\n, [%15.0i]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%15.0i] - l.%d\n, [%15.0i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2730i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15.0i] - l.%d\n, [%15.0i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%15.0i] - l.%d\n, [%15.0i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2731i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15.0i] - l.%d\n, [%15.0i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%15.0i] - l.%d\n, [%15.0i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2732i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15.5i] - l.%d\n, [%15.5i]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%15.5i] - l.%d\n, [%15.5i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2733i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15.5i] - l.%d\n, [%15.5i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%15.5i] - l.%d\n, [%15.5i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2734i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15.5i] - l.%d\n, [%15.5i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%15.5i] - l.%d\n, [%15.5i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2735i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15.20i] - l.%d\n, [%15.20i]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%15.20i] - l.%d\n, [%15.20i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2736i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15.20i] - l.%d\n, [%15.20i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%15.20i] - l.%d\n, [%15.20i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2737i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15.20i] - l.%d\n, [%15.20i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%15.20i] - l.%d\n, [%15.20i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2738i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-i] - l.%d\n, [%-i]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-i] - l.%d\n, [%-i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2739i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3i] - l.%d\n, [%-3i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3i] - l.%d\n, [%-3i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2740i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.0i] - l.%d\n, [%-3.0i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.0i] - l.%d\n, [%-3.0i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2741i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.2i] - l.%d\n, [%-3.2i]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.2i] - l.%d\n, [%-3.2i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2742i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.5i] - l.%d\n, [%-3.5i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.5i] - l.%d\n, [%-3.5i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2743i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.5i] - l.%d\n, [%-3.5i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.5i] - l.%d\n, [%-3.5i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2744i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.15i] - l.%d\n, [%-3.15i]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.15i] - l.%d\n, [%-3.15i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2745i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.15i] - l.%d\n, [%-3.15i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.15i] - l.%d\n, [%-3.15i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2746i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.15i] - l.%d\n, [%-3.15i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.15i] - l.%d\n, [%-3.15i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2747i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+i] - l.%d\n, [%+i]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%+i] - l.%d\n, [%+i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2748i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+i] - l.%d\n, [%+i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%+i] - l.%d\n, [%+i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_2749i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%+i] - l.%d\n, [%+i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%+i] - l.%d\n, [%+i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2750_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+3i] - l.%i\n, [%+3i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%+3i] - l.%i\n, [%+3i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2751_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+3i] - l.%i\n, [%+3i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%+3i] - l.%i\n, [%+3i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2752_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+3i] - l.%i\n, [%+3i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%+3i] - l.%i\n, [%+3i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2753_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+3i] - l.%i\n, [%+3i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%+3i] - l.%i\n, [%+3i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2754_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+3i] - l.%i\n, [%+3i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%+3i] - l.%i\n, [%+3i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2755_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+3i] - l.%i\n, [%+3i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%+3i] - l.%i\n, [%+3i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2756_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+3.5i] - l.%i\n, [%+3.5i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%+3.5i] - l.%i\n, [%+3.5i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2757_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+3.5i] - l.%i\n, [%+3.5i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%+3.5i] - l.%i\n, [%+3.5i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2758_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+3.5i] - l.%i\n, [%+3.5i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%+3.5i] - l.%i\n, [%+3.5i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2759_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+3.15i] - l.%i\n, [%+3.15i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%+3.15i] - l.%i\n, [%+3.15i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2760_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+3.15i] - l.%i\n, [%+3.15i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%+3.15i] - l.%i\n, [%+3.15i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2761_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+3.15i] - l.%i\n, [%+3.15i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%+3.15i] - l.%i\n, [%+3.15i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2762_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+15i] - l.%i\n, [%+15i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%+15i] - l.%i\n, [%+15i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2763_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+15i] - l.%i\n, [%+15i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%+15i] - l.%i\n, [%+15i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2764_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+15i] - l.%i\n, [%+15i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%+15i] - l.%i\n, [%+15i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2765_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+15.0i] - l.%i\n, [%+15.0i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%+15.0i] - l.%i\n, [%+15.0i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2766_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+15.0i] - l.%i\n, [%+15.0i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%+15.0i] - l.%i\n, [%+15.0i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2767_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+15.0i] - l.%i\n, [%+15.0i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%+15.0i] - l.%i\n, [%+15.0i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2768_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+15.5i] - l.%i\n, [%+15.5i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%+15.5i] - l.%i\n, [%+15.5i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2769_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+15.5i] - l.%i\n, [%+15.5i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%+15.5i] - l.%i\n, [%+15.5i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2770_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+15.5i] - l.%i\n, [%+15.5i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%+15.5i] - l.%i\n, [%+15.5i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2771_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+15.20i] - l.%i\n, [%+15.20i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%+15.20i] - l.%i\n, [%+15.20i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2772_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+15.20i] - l.%i\n, [%+15.20i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%+15.20i] - l.%i\n, [%+15.20i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2773_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+15.20i] - l.%i\n, [%+15.20i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%+15.20i] - l.%i\n, [%+15.20i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2774_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% i] - l.%i\n, [% i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%% i] - l.%i\n, [% i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2775_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% i] - l.%i\n, [% i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%% i] - l.%i\n, [% i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2776_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% i] - l.%i\n, [% i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%% i] - l.%i\n, [% i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2777_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 3i] - l.%i\n, [% 3i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%% 3i] - l.%i\n, [% 3i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2778_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 3i] - l.%i\n, [% 3i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%% 3i] - l.%i\n, [% 3i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2779_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 3i] - l.%i\n, [% 3i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%% 3i] - l.%i\n, [% 3i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2780_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, " - %i - [%% 3.0i] - l.%i\n, [% 3.0i]", 0, - 2, __LINE__);
sprintf(str1, " - %i - [%% 3.0i] - l.%i\n, [% 3.0i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2781_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, " - %i - [%% 3.0i] - l.%i\n, [% 3.0i]", INT_MIN, - 2, __LINE__);
sprintf(str1, " - %i - [%% 3.0i] - l.%i\n, [% 3.0i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2782_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, " - %i - [%% 3.0i] - l.%i\n, [% 3.0i]", INT_MAX, - 2, __LINE__);
sprintf(str1, " - %i - [%% 3.0i] - l.%i\n, [% 3.0i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2783_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 3.2i] - l.%i\n, [% 3.2i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%% 3.2i] - l.%i\n, [% 3.2i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2784_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 3.2i] - l.%i\n, [% 3.2i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%% 3.2i] - l.%i\n, [% 3.2i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2785_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 3.2i] - l.%i\n, [% 3.2i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%% 3.2i] - l.%i\n, [% 3.2i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2786_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 3.5i] - l.%i\n, [% 3.5i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%% 3.5i] - l.%i\n, [% 3.5i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2786_2_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 3.5i] - l.%i\n, [% 3.5i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%% 3.5i] - l.%i\n, [% 3.5i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2787_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 3.5i] - l.%i\n, [% 3.5i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%% 3.5i] - l.%i\n, [% 3.5i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2788_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 3.15i] - l.%i\n, [% 3.15i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%% 3.15i] - l.%i\n, [% 3.15i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2789_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 3.15i] - l.%i\n, [% 3.15i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%% 3.15i] - l.%i\n, [% 3.15i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2790_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 3.15i] - l.%i\n, [% 3.15i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%% 3.15i] - l.%i\n, [% 3.15i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2791_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 15i] - l.%i\n, [% 15i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%% 15i] - l.%i\n, [% 15i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2792_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 15i] - l.%i\n, [% 15i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%% 15i] - l.%i\n, [% 15i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2793_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 15i] - l.%i\n, [% 15i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%% 15i] - l.%i\n, [% 15i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2794_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 15.0i] - l.%i\n, [% 15.0i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%% 15.0i] - l.%i\n, [% 15.0i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2795_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 15.0i] - l.%i\n, [% 15.0i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%% 15.0i] - l.%i\n, [% 15.0i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2796_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 15.0i] - l.%i\n, [% 15.0i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%% 15.0i] - l.%i\n, [% 15.0i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2800_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 15.20i] - l.%i\n, [% 15.20i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%% 15.20i] - l.%i\n, [% 15.20i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2802_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 15.20i] - l.%i\n, [% 15.20i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%% 15.20i] - l.%i\n, [% 15.20i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2803_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%hi] - l.%i\n, [%hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%hi] - l.%i\n, [%hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2804_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%hi] - l.%i\n, [%hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%hi] - l.%i\n, [%hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2805_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%hi] - l.%i\n, [%hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%hi] - l.%i\n, [%hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2806_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%3hi] - l.%i\n, [%3hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%3hi] - l.%i\n, [%3hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2807_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%3hi] - l.%i\n, [%3hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%3hi] - l.%i\n, [%3hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2807_2_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%3hi] - l.%i\n, [%3hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%3hi] - l.%i\n, [%3hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2808_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%3.0hi] - l.%i\n, [%3.0hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%3.0hi] - l.%i\n, [%3.0hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2809_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%3.0hi] - l.%i\n, [%3.0hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%3.0hi] - l.%i\n, [%3.0hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2810_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%3.0hi] - l.%i\n, [%3.0hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%3.0hi] - l.%i\n, [%3.0hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2811_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%3.2hi] - l.%i\n, [%3.2hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%3.2hi] - l.%i\n, [%3.2hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2812_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%3.2hi] - l.%i\n, [%3.2hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%3.2hi] - l.%i\n, [%3.2hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2813_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%3.2hi] - l.%i\n, [%3.2hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%3.2hi] - l.%i\n, [%3.2hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2814_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%3.5hi] - l.%i\n, [%3.5hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%3.5hi] - l.%i\n, [%3.5hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2815_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%3.5hi] - l.%i\n, [%3.5hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%3.5hi] - l.%i\n, [%3.5hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2816_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%3.5hi] - l.%i\n, [%3.5hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%3.5hi] - l.%i\n, [%3.5hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2817_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%3.15hi] - l.%i\n, [%3.15hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%3.15hi] - l.%i\n, [%3.15hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2818_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%3.15hi] - l.%i\n, [%3.15hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%3.15hi] - l.%i\n, [%3.15hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2819_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%3.15hi] - l.%i\n, [%3.15hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%3.15hi] - l.%i\n, [%3.15hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2820_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%15hi] - l.%i\n, [%15hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%15hi] - l.%i\n, [%15hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2821_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%15hi] - l.%i\n, [%15hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%15hi] - l.%i\n, [%15hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2822_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%15hi] - l.%i\n, [%15hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%15hi] - l.%i\n, [%15hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2823_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%15.0hi] - l.%i\n, [%15.0hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%15.0hi] - l.%i\n, [%15.0hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2824_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%15.0hi] - l.%i\n, [%15.0hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%15.0hi] - l.%i\n, [%15.0hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2825_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%15.0hi] - l.%i\n, [%15.0hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%15.0hi] - l.%i\n, [%15.0hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2826_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%15.5hi] - l.%i\n, [%15.5hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%15.5hi] - l.%i\n, [%15.5hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2827_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%15.5hi] - l.%i\n, [%15.5hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%15.5hi] - l.%i\n, [%15.5hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2828_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%15.5hi] - l.%i\n, [%15.5hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%15.5hi] - l.%i\n, [%15.5hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2829_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%15.20hi] - l.%i\n, [%15.20hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%15.20hi] - l.%i\n, [%15.20hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2830_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%15.20hi] - l.%i\n, [%15.20hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%15.20hi] - l.%i\n, [%15.20hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2831_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%15.20hi] - l.%i\n, [%15.20hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%15.20hi] - l.%i\n, [%15.20hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2832_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-hi] - l.%i\n, [%-hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%-hi] - l.%i\n, [%-hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2833_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-hi] - l.%i\n, [%-hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%-hi] - l.%i\n, [%-hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2834_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-hi] - l.%i\n, [%-hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%-hi] - l.%i\n, [%-hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2835_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-3hi] - l.%i\n, [%-3hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%-3hi] - l.%i\n, [%-3hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2836_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-3hi] - l.%i\n, [%-3hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%-3hi] - l.%i\n, [%-3hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2837_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-3hi] - l.%i\n, [%-3hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%-3hi] - l.%i\n, [%-3hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2838_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-3.0hi] - l.%i\n, [%-3.0hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%-3.0hi] - l.%i\n, [%-3.0hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2839_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-3.0hi] - l.%i\n, [%-3.0hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%-3.0hi] - l.%i\n, [%-3.0hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2840_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-3.0hi] - l.%i\n, [%-3.0hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%-3.0hi] - l.%i\n, [%-3.0hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2841_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-3.2hi] - l.%i\n, [%-3.2hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%-3.2hi] - l.%i\n, [%-3.2hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2842_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-3.2hi] - l.%i\n, [%-3.2hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%-3.2hi] - l.%i\n, [%-3.2hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2843_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-3.2hi] - l.%i\n, [%-3.2hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%-3.2hi] - l.%i\n, [%-3.2hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2844_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-3.5hi] - l.%i\n, [%-3.5hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%-3.5hi] - l.%i\n, [%-3.5hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2845_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-3.5hi] - l.%i\n, [%-3.5hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%-3.5hi] - l.%i\n, [%-3.5hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2846_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-3.5hi] - l.%i\n, [%-3.5hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%-3.5hi] - l.%i\n, [%-3.5hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2847_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-3.15hi] - l.%i\n, [%-3.15hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%-3.15hi] - l.%i\n, [%-3.15hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2848_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-3.15hi] - l.%i\n, [%-3.15hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%-3.15hi] - l.%i\n, [%-3.15hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2849_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-3.15hi] - l.%i\n, [%-3.15hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%-3.15hi] - l.%i\n, [%-3.15hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2850_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+hi] - l.%i\n, [%+hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%+hi] - l.%i\n, [%+hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2851_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+hi] - l.%i\n, [%+hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%+hi] - l.%i\n, [%+hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2852_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+hi] - l.%i\n, [%+hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%+hi] - l.%i\n, [%+hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2853_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+3hi] - l.%i\n, [%+3hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%+3hi] - l.%i\n, [%+3hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2854_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+3hi] - l.%i\n, [%+3hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%+3hi] - l.%i\n, [%+3hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2855_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+3hi] - l.%i\n, [%+3hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%+3hi] - l.%i\n, [%+3hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2856_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+3.0hi] - l.%i\n, [%+3.0hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%+3.0hi] - l.%i\n, [%+3.0hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2857_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+3.0hi] - l.%i\n, [%+3.0hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%+3.0hi] - l.%i\n, [%+3.0hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2858_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+3.0hi] - l.%i\n, [%+3.0hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%+3.0hi] - l.%i\n, [%+3.0hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2859_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+3.5hi] - l.%i\n, [%+3.5hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%+3.5hi] - l.%i\n, [%+3.5hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2860_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+3.5hi] - l.%i\n, [%+3.5hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%+3.5hi] - l.%i\n, [%+3.5hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2861_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+3.5hi] - l.%i\n, [%+3.5hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%+3.5hi] - l.%i\n, [%+3.5hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2862_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+3.15hi] - l.%i\n, [%+3.15hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%+3.15hi] - l.%i\n, [%+3.15hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2863_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+3.15hi] - l.%i\n, [%+3.15hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%+3.15hi] - l.%i\n, [%+3.15hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2864_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+3.15hi] - l.%i\n, [%+3.15hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%+3.15hi] - l.%i\n, [%+3.15hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2865_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+15hi] - l.%i\n, [%+15hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%+15hi] - l.%i\n, [%+15hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2866_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+15hi] - l.%i\n, [%+15hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%+15hi] - l.%i\n, [%+15hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2867_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+15hi] - l.%i\n, [%+15hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%+15hi] - l.%i\n, [%+15hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2868_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+15.0hi] - l.%i\n, [%+15.0hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%+15.0hi] - l.%i\n, [%+15.0hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2869_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+15.0hi] - l.%i\n, [%+15.0hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%+15.0hi] - l.%i\n, [%+15.0hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2870_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+15.0hi] - l.%i\n, [%+15.0hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%+15.0hi] - l.%i\n, [%+15.0hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2871_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+15.5hi] - l.%i\n, [%+15.5hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%+15.5hi] - l.%i\n, [%+15.5hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2872_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+15.5hi] - l.%i\n, [%+15.5hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%+15.5hi] - l.%i\n, [%+15.5hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2873_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+15.5hi] - l.%i\n, [%+15.5hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%+15.5hi] - l.%i\n, [%+15.5hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2874_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+15.20hi] - l.%i\n, [%+15.20hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%+15.20hi] - l.%i\n, [%+15.20hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2875_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+15.20hi] - l.%i\n, [%+15.20hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%+15.20hi] - l.%i\n, [%+15.20hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2876_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%+15.20hi] - l.%i\n, [%+15.20hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%+15.20hi] - l.%i\n, [%+15.20hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2877_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% hi] - l.%i\n, [% hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%% hi] - l.%i\n, [% hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2878_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% hi] - l.%i\n, [% hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%% hi] - l.%i\n, [% hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2879_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% hi] - l.%i\n, [% hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%% hi] - l.%i\n, [% hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2880_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 3hi] - l.%i\n, [% 3hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%% 3hi] - l.%i\n, [% 3hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2881_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 3hi] - l.%i\n, [% 3hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%% 3hi] - l.%i\n, [% 3hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2882_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 3hi] - l.%i\n, [% 3hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%% 3hi] - l.%i\n, [% 3hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2883_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 3.0hi] - l.%i\n, [% 3.0hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%% 3.0hi] - l.%i\n, [% 3.0hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2884_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 3.0hi] - l.%i\n, [% 3.0hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%% 3.0hi] - l.%i\n, [% 3.0hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2885_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 3.0hi] - l.%i\n, [% 3.0hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%% 3.0hi] - l.%i\n, [% 3.0hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2886_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 3.2hi] - l.%i\n, [% 3.2hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%% 3.2hi] - l.%i\n, [% 3.2hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2887_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 3.2hi] - l.%i\n, [% 3.2hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%% 3.2hi] - l.%i\n, [% 3.2hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2888_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 3.2hi] - l.%i\n, [% 3.2hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%% 3.2hi] - l.%i\n, [% 3.2hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2889_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 3.5hi] - l.%i\n, [% 3.5hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%% 3.5hi] - l.%i\n, [% 3.5hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2890_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 3.5hi] - l.%i\n, [% 3.5hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%% 3.5hi] - l.%i\n, [% 3.5hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2891_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 3.5hi] - l.%i\n, [% 3.5hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%% 3.5hi] - l.%i\n, [% 3.5hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2892_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 3.15hi] - l.%i\n, [% 3.15hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%% 3.15hi] - l.%i\n, [% 3.15hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2893_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 3.15hi] - l.%i\n, [% 3.15hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%% 3.15hi] - l.%i\n, [% 3.15hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2894_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 3.15hi] - l.%i\n, [% 3.15hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%% 3.15hi] - l.%i\n, [% 3.15hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2895_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 15hi] - l.%i\n, [% 15hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%% 15hi] - l.%i\n, [% 15hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2896_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 15hi] - l.%i\n, [% 15hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%% 15hi] - l.%i\n, [% 15hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2897_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 15hi] - l.%i\n, [% 15hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%% 15hi] - l.%i\n, [% 15hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2898_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 15.0hi] - l.%i\n, [% 15.0hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%% 15.0hi] - l.%i\n, [% 15.0hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2899_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 15.0hi] - l.%i\n, [% 15.0hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%% 15.0hi] - l.%i\n, [% 15.0hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2900_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 15.0hi] - l.%i\n, [% 15.0hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%% 15.0hi] - l.%i\n, [% 15.0hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2904_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 15.20hi] - l.%i\n, [% 15.20hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%% 15.20hi] - l.%i\n, [% 15.20hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2905_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 15.20hi] - l.%i\n, [% 15.20hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%% 15.20hi] - l.%i\n, [% 15.20hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_2906_i
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%% 15.20hi] - l.%i\n, [% 15.20hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%% 15.20hi] - l.%i\n, [% 15.20hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3013
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+i] - l.%i\n, [%-+i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+i] - l.%i\n, [%-+i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3014
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+i] - l.%i\n, [%-+i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+i] - l.%i\n, [%-+i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3015
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+i] - l.%i\n, [%-+i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+i] - l.%i\n, [%-+i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3016
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+3i] - l.%i\n, [%-+3i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+3i] - l.%i\n, [%-+3i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3017
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+3i] - l.%i\n, [%-+3i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+3i] - l.%i\n, [%-+3i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3018
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+3i] - l.%i\n, [%-+3i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+3i] - l.%i\n, [%-+3i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3019
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+3.0i] - l.%i\n, [%-+3.0i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+3.0i] - l.%i\n, [%-+3.0i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3020
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+3.0i] - l.%i\n, [%-+3.0i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+3.0i] - l.%i\n, [%-+3.0i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3021
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+3.0i] - l.%i\n, [%-+3.0i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+3.0i] - l.%i\n, [%-+3.0i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3021_2
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+3.2i] - l.%i\n, [%-+3.2i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+3.2i] - l.%i\n, [%-+3.2i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3022
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+3.2i] - l.%i\n, [%-+3.2i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+3.2i] - l.%i\n, [%-+3.2i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3023
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+3.2i] - l.%i\n, [%-+3.2i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+3.2i] - l.%i\n, [%-+3.2i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3024
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+3.5i] - l.%i\n, [%-+3.5i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+3.5i] - l.%i\n, [%-+3.5i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3025
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+3.5i] - l.%i\n, [%-+3.5i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+3.5i] - l.%i\n, [%-+3.5i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3026
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+3.5i] - l.%i\n, [%-+3.5i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+3.5i] - l.%i\n, [%-+3.5i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3027
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+3.15i] - l.%i\n, [%-+3.15i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+3.15i] - l.%i\n, [%-+3.15i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3028
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+3.15i] - l.%i\n, [%-+3.15i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+3.15i] - l.%i\n, [%-+3.15i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3029
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+3.15i] - l.%i\n, [%-+3.15i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+3.15i] - l.%i\n, [%-+3.15i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3030
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+15i] - l.%i\n, [%-+15i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+15i] - l.%i\n, [%-+15i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3031
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+15i] - l.%i\n, [%-+15i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+15i] - l.%i\n, [%-+15i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3032
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+15i] - l.%i\n, [%-+15i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+15i] - l.%i\n, [%-+15i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3033
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+15.0i] - l.%i\n, [%-+15.0i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+15.0i] - l.%i\n, [%-+15.0i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3034
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+15.0i] - l.%i\n, [%-+15.0i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+15.0i] - l.%i\n, [%-+15.0i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3035
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+15.0i] - l.%i\n, [%-+15.0i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+15.0i] - l.%i\n, [%-+15.0i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3036
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+15.5i] - l.%i\n, [%-+15.5i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+15.5i] - l.%i\n, [%-+15.5i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3037
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+15.5i] - l.%i\n, [%-+15.5i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+15.5i] - l.%i\n, [%-+15.5i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3038
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+15.5i] - l.%i\n, [%-+15.5i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+15.5i] - l.%i\n, [%-+15.5i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3039
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+15.20i] - l.%i\n, [%-+15.20i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+15.20i] - l.%i\n, [%-+15.20i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3040
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+15.20i] - l.%i\n, [%-+15.20i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+15.20i] - l.%i\n, [%-+15.20i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3041
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+15.20i] - l.%i\n, [%-+15.20i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+15.20i] - l.%i\n, [%-+15.20i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3072
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- i] - l.%i\n, [%- i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%- i] - l.%i\n, [%- i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3073
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- i] - l.%i\n, [%- i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%- i] - l.%i\n, [%- i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3074
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- i] - l.%i\n, [%- i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%- i] - l.%i\n, [%- i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3075
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 3i] - l.%i\n, [%- 3i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 3i] - l.%i\n, [%- 3i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3076
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 3i] - l.%i\n, [%- 3i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 3i] - l.%i\n, [%- 3i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3077
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 3i] - l.%i\n, [%- 3i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 3i] - l.%i\n, [%- 3i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3078
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 3.0i] - l.%i\n, [%- 3.0i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 3.0i] - l.%i\n, [%- 3.0i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3079
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 3.0i] - l.%i\n, [%- 3.0i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 3.0i] - l.%i\n, [%- 3.0i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3080
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 3.0i] - l.%i\n, [%- 3.0i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 3.0i] - l.%i\n, [%- 3.0i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3081
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 3.2i] - l.%i\n, [%- 3.2i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 3.2i] - l.%i\n, [%- 3.2i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3082
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 3.2i] - l.%i\n, [%- 3.2i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 3.2i] - l.%i\n, [%- 3.2i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3083
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 3.2i] - l.%i\n, [%- 3.2i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 3.2i] - l.%i\n, [%- 3.2i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3084
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 3.5i] - l.%i\n, [%- 3.5i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 3.5i] - l.%i\n, [%- 3.5i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3085
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 3.5i] - l.%i\n, [%- 3.5i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 3.5i] - l.%i\n, [%- 3.5i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3086
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 3.5i] - l.%i\n, [%- 3.5i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 3.5i] - l.%i\n, [%- 3.5i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3087
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 3.15i] - l.%i\n, [%- 3.15i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 3.15i] - l.%i\n, [%- 3.15i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3088
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 3.15i] - l.%i\n, [%- 3.15i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 3.15i] - l.%i\n, [%- 3.15i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3089
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 3.15i] - l.%i\n, [%- 3.15i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 3.15i] - l.%i\n, [%- 3.15i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3090
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 15i] - l.%i\n, [%- 15i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 15i] - l.%i\n, [%- 15i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3091
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 15i] - l.%i\n, [%- 15i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 15i] - l.%i\n, [%- 15i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3092
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 15i] - l.%i\n, [%- 15i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 15i] - l.%i\n, [%- 15i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3093
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 15.0i] - l.%i\n, [%- 15.0i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 15.0i] - l.%i\n, [%- 15.0i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3094
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 15.0i] - l.%i\n, [%- 15.0i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 15.0i] - l.%i\n, [%- 15.0i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3095
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 15.0i] - l.%i\n, [%- 15.0i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 15.0i] - l.%i\n, [%- 15.0i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3096
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 15.5i] - l.%i\n, [%- 15.5i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 15.5i] - l.%i\n, [%- 15.5i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3097
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 15.5i] - l.%i\n, [%- 15.5i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 15.5i] - l.%i\n, [%- 15.5i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3098
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 15.5i] - l.%i\n, [%- 15.5i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 15.5i] - l.%i\n, [%- 15.5i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3099
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 15.20i] - l.%i\n, [%- 15.20i]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 15.20i] - l.%i\n, [%- 15.20i]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3100
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 15.20i] - l.%i\n, [%- 15.20i]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 15.20i] - l.%i\n, [%- 15.20i]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3101
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 15.20i] - l.%i\n, [%- 15.20i]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 15.20i] - l.%i\n, [%- 15.20i]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3132
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+hi] - l.%i\n, [%-+hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+hi] - l.%i\n, [%-+hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3133
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+hi] - l.%i\n, [%-+hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+hi] - l.%i\n, [%-+hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3134
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+hi] - l.%i\n, [%-+hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+hi] - l.%i\n, [%-+hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3135
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+3hi] - l.%i\n, [%-+3hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+3hi] - l.%i\n, [%-+3hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3136
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+3hi] - l.%i\n, [%-+3hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+3hi] - l.%i\n, [%-+3hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3137
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+3hi] - l.%i\n, [%-+3hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+3hi] - l.%i\n, [%-+3hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3138
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+3.0hi] - l.%i\n, [%-+3.0hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+3.0hi] - l.%i\n, [%-+3.0hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3139
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+3.0hi] - l.%i\n, [%-+3.0hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+3.0hi] - l.%i\n, [%-+3.0hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3140
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+3.0hi] - l.%i\n, [%-+3.0hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+3.0hi] - l.%i\n, [%-+3.0hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3141
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+3.2hi] - l.%i\n, [%-+3.2hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+3.2hi] - l.%i\n, [%-+3.2hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3142
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+3.2hi] - l.%i\n, [%-+3.2hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+3.2hi] - l.%i\n, [%-+3.2hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3143
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+3.2hi] - l.%i\n, [%-+3.2hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+3.2hi] - l.%i\n, [%-+3.2hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3144
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+3.5hi] - l.%i\n, [%-+3.5hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+3.5hi] - l.%i\n, [%-+3.5hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3145
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+3.5hi] - l.%i\n, [%-+3.5hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+3.5hi] - l.%i\n, [%-+3.5hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3146
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+3.5hi] - l.%i\n, [%-+3.5hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+3.5hi] - l.%i\n, [%-+3.5hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3147
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+3.15hi] - l.%i\n, [%-+3.15hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+3.15hi] - l.%i\n, [%-+3.15hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3148
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+3.15hi] - l.%i\n, [%-+3.15hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+3.15hi] - l.%i\n, [%-+3.15hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3149
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+3.15hi] - l.%i\n, [%-+3.15hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+3.15hi] - l.%i\n, [%-+3.15hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3150
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+15hi] - l.%i\n, [%-+15hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+15hi] - l.%i\n, [%-+15hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3151
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+15hi] - l.%i\n, [%-+15hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+15hi] - l.%i\n, [%-+15hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3152
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+15hi] - l.%i\n, [%-+15hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+15hi] - l.%i\n, [%-+15hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3153
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+15.0hi] - l.%i\n, [%-+15.0hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+15.0hi] - l.%i\n, [%-+15.0hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3154
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+15.0hi] - l.%i\n, [%-+15.0hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+15.0hi] - l.%i\n, [%-+15.0hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3155
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+15.0hi] - l.%i\n, [%-+15.0hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+15.0hi] - l.%i\n, [%-+15.0hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3156
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+15.5hi] - l.%i\n, [%-+15.5hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+15.5hi] - l.%i\n, [%-+15.5hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3157
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+15.5hi] - l.%i\n, [%-+15.5hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+15.5hi] - l.%i\n, [%-+15.5hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3158
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+15.5hi] - l.%i\n, [%-+15.5hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+15.5hi] - l.%i\n, [%-+15.5hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3159
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+15.20hi] - l.%i\n, [%-+15.20hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+15.20hi] - l.%i\n, [%-+15.20hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3160
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+15.20hi] - l.%i\n, [%-+15.20hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+15.20hi] - l.%i\n, [%-+15.20hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3161
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%-+15.20hi] - l.%i\n, [%-+15.20hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%-+15.20hi] - l.%i\n, [%-+15.20hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3192
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- hi] - l.%i\n, [%- hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%- hi] - l.%i\n, [%- hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3193
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- hi] - l.%i\n, [%- hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%- hi] - l.%i\n, [%- hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3194
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- hi] - l.%i\n, [%- hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%- hi] - l.%i\n, [%- hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3195
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 3hi] - l.%i\n, [%- 3hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 3hi] - l.%i\n, [%- 3hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3196
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 3hi] - l.%i\n, [%- 3hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 3hi] - l.%i\n, [%- 3hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3197
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 3hi] - l.%i\n, [%- 3hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 3hi] - l.%i\n, [%- 3hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3198
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 3.0hi] - l.%i\n, [%- 3.0hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 3.0hi] - l.%i\n, [%- 3.0hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3199
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 3.0hi] - l.%i\n, [%- 3.0hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 3.0hi] - l.%i\n, [%- 3.0hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3200
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 3.0hi] - l.%i\n, [%- 3.0hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 3.0hi] - l.%i\n, [%- 3.0hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3201
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 3.2hi] - l.%i\n, [%- 3.2hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 3.2hi] - l.%i\n, [%- 3.2hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3202
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 3.2hi] - l.%i\n, [%- 3.2hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 3.2hi] - l.%i\n, [%- 3.2hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3203
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 3.2hi] - l.%i\n, [%- 3.2hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 3.2hi] - l.%i\n, [%- 3.2hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3204
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 3.5hi] - l.%i\n, [%- 3.5hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 3.5hi] - l.%i\n, [%- 3.5hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3205
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 3.5hi] - l.%i\n, [%- 3.5hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 3.5hi] - l.%i\n, [%- 3.5hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3206
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 3.5hi] - l.%i\n, [%- 3.5hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 3.5hi] - l.%i\n, [%- 3.5hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3207
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 3.15hi] - l.%i\n, [%- 3.15hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 3.15hi] - l.%i\n, [%- 3.15hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3208
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 3.15hi] - l.%i\n, [%- 3.15hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 3.15hi] - l.%i\n, [%- 3.15hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3209
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 3.15hi] - l.%i\n, [%- 3.15hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 3.15hi] - l.%i\n, [%- 3.15hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3210
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 15hi] - l.%i\n, [%- 15hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 15hi] - l.%i\n, [%- 15hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3211
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 15hi] - l.%i\n, [%- 15hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 15hi] - l.%i\n, [%- 15hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3212
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 15hi] - l.%i\n, [%- 15hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 15hi] - l.%i\n, [%- 15hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3213
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 15.0hi] - l.%i\n, [%- 15.0hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 15.0hi] - l.%i\n, [%- 15.0hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3214
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 15.0hi] - l.%i\n, [%- 15.0hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 15.0hi] - l.%i\n, [%- 15.0hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3215
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 15.0hi] - l.%i\n, [%- 15.0hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 15.0hi] - l.%i\n, [%- 15.0hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3216
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 15.5hi] - l.%i\n, [%- 15.5hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 15.5hi] - l.%i\n, [%- 15.5hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3217
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 15.5hi] - l.%i\n, [%- 15.5hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 15.5hi] - l.%i\n, [%- 15.5hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3218
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 15.5hi] - l.%i\n, [%- 15.5hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 15.5hi] - l.%i\n, [%- 15.5hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3219
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 15.20hi] - l.%i\n, [%- 15.20hi]", 0, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 15.20hi] - l.%i\n, [%- 15.20hi]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3220
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 15.20hi] - l.%i\n, [%- 15.20hi]", SHRT_MIN, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 15.20hi] - l.%i\n, [%- 15.20hi]", SHRT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_3221
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %i - [%%- 15.20hi] - l.%i\n, [%- 15.20hi]", SHRT_MAX, - 2, __LINE__);
sprintf(str1, "- %i - [%%- 15.20hi] - l.%i\n, [%- 15.20hi]", SHRT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4001
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%u] - l.%d\n, [%u]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%u] - l.%d\n, [%u]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4002
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%u] - l.%d\n, [%u]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%u] - l.%d\n, [%u]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4004
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3u] - l.%d\n, [%3u]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%3u] - l.%d\n, [%3u]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4005
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3u] - l.%d\n, [%3u]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%3u] - l.%d\n, [%3u]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4006
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3u] - l.%d\n, [%3u]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%3u] - l.%d\n, [%3u]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4007
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.0u] - l.%d\n, [%3.0u]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.0u] - l.%d\n, [%3.0u]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4008
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.0u] - l.%d\n, [%3.0u]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.0u] - l.%d\n, [%3.0u]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4009
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.0u] - l.%d\n, [%3.0u]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.0u] - l.%d\n, [%3.0u]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4010
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.2u] - l.%d\n, [%3.2u]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.2u] - l.%d\n, [%3.2u]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4011
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.2u] - l.%d\n, [%3.2u]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.2u] - l.%d\n, [%3.2u]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4012
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.2u] - l.%d\n, [%3.2u]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.2u] - l.%d\n, [%3.2u]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4013
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.5u] - l.%d\n, [%3.5u]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.5u] - l.%d\n, [%3.5u]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4014
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.5u] - l.%d\n, [%3.5u]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.5u] - l.%d\n, [%3.5u]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4015
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.5u] - l.%d\n, [%3.5u]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.5u] - l.%d\n, [%3.5u]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4016
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.15u] - l.%d\n, [%3.15u]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.15u] - l.%d\n, [%3.15u]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4017
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.15u] - l.%d\n, [%3.15u]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.15u] - l.%d\n, [%3.15u]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4018
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%3.15u] - l.%d\n, [%3.15u]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%3.15u] - l.%d\n, [%3.15u]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4019
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15u] - l.%d\n, [%15u]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%15u] - l.%d\n, [%15u]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4020
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15u] - l.%d\n, [%15u]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%15u] - l.%d\n, [%15u]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4021
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15u] - l.%d\n, [%15u]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%15u] - l.%d\n, [%15u]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4022
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15.0u] - l.%d\n, [%15.0u]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%15.0u] - l.%d\n, [%15.0u]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4023
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15.0u] - l.%d\n, [%15.0u]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%15.0u] - l.%d\n, [%15.0u]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4024
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15.5u] - l.%d\n, [%15.5u]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%15.5u] - l.%d\n, [%15.5u]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4025
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15.20u] - l.%d\n, [%15.20u]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%15.20u] - l.%d\n, [%15.20u]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4026
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15.20u] - l.%d\n, [%15.20u]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%15.20u] - l.%d\n, [%15.20u]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4027
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%15.20u] - l.%d\n, [%15.20u]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%15.20u] - l.%d\n, [%15.20u]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4028
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-u] - l.%d\n, [%-u]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-u] - l.%d\n, [%-u]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4029
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-u] - l.%d\n, [%-u]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-u] - l.%d\n, [%-u]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4030
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-u] - l.%d\n, [%-u]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-u] - l.%d\n, [%-u]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4031
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3u] - l.%d\n, [%-3u]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3u] - l.%d\n, [%-3u]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4032
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3u] - l.%d\n, [%-3u]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3u] - l.%d\n, [%-3u]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4033
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3u] - l.%d\n, [%-3u]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3u] - l.%d\n, [%-3u]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4034
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.0u] - l.%d\n, [%-3.0u]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.0u] - l.%d\n, [%-3.0u]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4035
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.0u] - l.%d\n, [%-3.0u]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.0u] - l.%d\n, [%-3.0u]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4036
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.0u] - l.%d\n, [%-3.0u]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.0u] - l.%d\n, [%-3.0u]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4037
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.2u] - l.%d\n, [%-3.2u]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.2u] - l.%d\n, [%-3.2u]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4038
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.2u] - l.%d\n, [%-3.2u]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.2u] - l.%d\n, [%-3.2u]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4039
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.2u] - l.%d\n, [%-3.2u]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.2u] - l.%d\n, [%-3.2u]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4040
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.5u] - l.%d\n, [%-3.5u]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.5u] - l.%d\n, [%-3.5u]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4041
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.5u] - l.%d\n, [%-3.5u]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.5u] - l.%d\n, [%-3.5u]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4042
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.5u] - l.%d\n, [%-3.5u]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.5u] - l.%d\n, [%-3.5u]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4043
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.15u] - l.%d\n, [%-3.15u]", 0, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.15u] - l.%d\n, [%-3.15u]", 0, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4044
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.15u] - l.%d\n, [%-3.15u]", INT_MIN, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.15u] - l.%d\n, [%-3.15u]", INT_MIN, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4045
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "- %d - [%%-3.15u] - l.%d\n, [%-3.15u]", INT_MAX, - 2, __LINE__);
sprintf(str1, "- %d - [%%-3.15u] - l.%d\n, [%-3.15u]", INT_MAX, - 2, __LINE__ - 1);
ck_assert_str_eq(str1, str2);

#test sprintf_i_4046
char str1[1024] = "";
char str2[1024] = "";
s21_sprintf(str2, "%12.0f", 999.483999);
sprintf(str1, "%12.0f", 999.483999);
ck_assert_str_eq(str1, str2);